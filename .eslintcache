[{"D:\\Project\\cmstock-reactjs-material\\src\\index.js":"1","D:\\Project\\cmstock-reactjs-material\\src\\App.js":"2","D:\\Project\\cmstock-reactjs-material\\src\\reducers\\index.js":"3","D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\StockEdit.js":"4","D:\\Project\\cmstock-reactjs-material\\src\\components\\fragments\\Menu.js":"5","D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\Stock.js":"6","D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\StockCreate.js":"7","D:\\Project\\cmstock-reactjs-material\\src\\components\\fragments\\Header.js":"8","D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\Login.js":"9","D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\Register.js":"10","D:\\Project\\cmstock-reactjs-material\\src\\reducers\\register.reducer.js":"11","D:\\Project\\cmstock-reactjs-material\\src\\reducers\\stock.reducer.js":"12","D:\\Project\\cmstock-reactjs-material\\src\\reducers\\transaction.reducer.js":"13","D:\\Project\\cmstock-reactjs-material\\src\\reducers\\shop.reducer.js":"14","D:\\Project\\cmstock-reactjs-material\\src\\reducers\\login.reducer.js":"15","D:\\Project\\cmstock-reactjs-material\\src\\actions\\login.action.js":"16","D:\\Project\\cmstock-reactjs-material\\src\\Constatns.js":"17","D:\\Project\\cmstock-reactjs-material\\src\\utils\\HttpClient.js":"18","D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\Report.js":"19","D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\AboutUs.js":"20","D:\\Project\\cmstock-reactjs-material\\src\\actions\\stock.action.js":"21","D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\User.js":"22","D:\\Project\\cmstock-reactjs-material\\src\\actions\\user.action.js":"23","D:\\Project\\cmstock-reactjs-material\\src\\reducers\\user.reducer.js":"24","D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\UserCreate.js":"25","D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\UserEdit.js":"26"},{"size":577,"mtime":1611206146313,"results":"27","hashOfConfig":"28"},{"size":4536,"mtime":1613311672025,"results":"29","hashOfConfig":"28"},{"size":476,"mtime":1612855004167,"results":"30","hashOfConfig":"28"},{"size":5509,"mtime":1613024771687,"results":"31","hashOfConfig":"28"},{"size":5337,"mtime":1613114129505,"results":"32","hashOfConfig":"28"},{"size":6507,"mtime":1613021008353,"results":"33","hashOfConfig":"28"},{"size":5376,"mtime":1613020928959,"results":"34","hashOfConfig":"28"},{"size":2464,"mtime":1613114677469,"results":"35","hashOfConfig":"28"},{"size":3105,"mtime":1611818495676,"results":"36","hashOfConfig":"28"},{"size":5634,"mtime":1613111964953,"results":"37","hashOfConfig":"28"},{"size":0,"mtime":1611134588012,"results":"38","hashOfConfig":"28"},{"size":611,"mtime":1612166669473,"results":"39","hashOfConfig":"28"},{"size":0,"mtime":1611134638044,"results":"40","hashOfConfig":"28"},{"size":0,"mtime":1611134619201,"results":"41","hashOfConfig":"28"},{"size":665,"mtime":1613310279292,"results":"42","hashOfConfig":"28"},{"size":1992,"mtime":1613312130546,"results":"43","hashOfConfig":"28"},{"size":2384,"mtime":1613310852375,"results":"44","hashOfConfig":"28"},{"size":920,"mtime":1611808122992,"results":"45","hashOfConfig":"28"},{"size":1022,"mtime":1612851426711,"results":"46","hashOfConfig":"28"},{"size":147,"mtime":1611824907966,"results":"47","hashOfConfig":"28"},{"size":1655,"mtime":1612775816175,"results":"48","hashOfConfig":"28"},{"size":5501,"mtime":1613028268194,"results":"49","hashOfConfig":"28"},{"size":2398,"mtime":1613112184686,"results":"50","hashOfConfig":"28"},{"size":739,"mtime":1612861211054,"results":"51","hashOfConfig":"28"},{"size":3686,"mtime":1613115787682,"results":"52","hashOfConfig":"28"},{"size":4652,"mtime":1613113704209,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"127skyx",{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"57"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"57"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"57"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"57"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"57"},"D:\\Project\\cmstock-reactjs-material\\src\\index.js",["122"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//  import Redux\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport logger from \"redux-logger\";\n\nvar middlewares = (middlewares = applyMiddleware(thunk, logger));\n\nconst store = createStore(reducers, middlewares);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["123","124"],"D:\\Project\\cmstock-reactjs-material\\src\\App.js",["125","126","127","128","129"],"import { React, useEffect, useState } from \"react\";\n\n// Material UI\nimport { Button, Container } from \"@material-ui/core\";\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\n\n// Route\nimport Header from \"./components/fragments/Header\";\nimport Menu from \"./components/fragments/Menu\";\nimport Login from \"./components/pages/Login\";\nimport Register from \"./components/pages/Register\";\nimport Stock from \"./components/pages/Stock\";\nimport StockCreate from \"./components/pages/StockCreate\";\nimport StockEdit from \"./components/pages/StockEdit\";\nimport Report from \"./components/pages/Report\";\nimport AboutUs from \"./components/pages/AboutUs\";\nimport User from \"./components/pages/User\";\nimport UserCreate from \"./components/pages/UserCreate\";\nimport UserEdit from \"./components/pages/UserEdit\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\n\n// Redux-Hook\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as loginAction from \"./../src/actions/login.action\";\n\nimport clsx from \"clsx\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: 0,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n}));\n\n// Protected Route\nconst SecuredRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      // ternary condition\n      loginAction.isLoggedIn() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nconst LoginRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      // ternary condition\n      loginAction.isLoggedIn() ? <Redirect to=\"/stock\" /> : <Login {...props} />\n    }\n  />\n);\n\nfunction App() {\n  const classes = useStyles();\n  const loginReducer = useSelector(({ loginReducer }) => loginReducer);\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleDrawerOpen = () => {\n    setOpenDrawer(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpenDrawer(false);\n  };\n\n  useEffect(() => {\n    dispatch(loginAction.reLogin());\n  }, []);\n\n  return (\n    <Router>\n      {loginReducer.result && !loginReducer.error && (\n        <Header handleDrawerOpen={handleDrawerOpen} open={openDrawer} />\n      )}\n\n      {loginReducer.result && !loginReducer.error && (\n        <Menu\n          handleDrawerOpen={openDrawer}\n          handleDrawerClose={handleDrawerClose}\n        />\n      )}\n\n      <div className={classes.drawerHeader} />\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]:\n            openDrawer && loginReducer.result && !loginReducer.error,\n        })}\n      >\n        <Container style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Switch>\n            <LoginRoute path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <SecuredRoute path=\"/stock\" component={Stock} />\n            <SecuredRoute path=\"/report\" component={Report} />\n            <SecuredRoute path=\"/about\" component={AboutUs} />\n            <SecuredRoute path=\"/stockCreate\" component={StockCreate} />\n            <SecuredRoute path=\"/stockEdit/:id\" component={StockEdit} />\n            <SecuredRoute path=\"/user\" component={User} />\n            <SecuredRoute path=\"/userCreate\" component={UserCreate} />\n            <SecuredRoute path=\"/userEdit/:id\" component={UserEdit} />\n            <Route\n              exact={true}\n              path=\"/\"\n              component={() => <Redirect to=\"/login\" />}\n            />\n          </Switch>\n        </Container>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","D:\\Project\\cmstock-reactjs-material\\src\\reducers\\index.js",[],"D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\StockEdit.js",["130","131","132","133"],"import { React, useEffect } from \"react\";\r\n\r\n// Route\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Formik\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\n\r\n// Material UI\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// Redux-Hook\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as stockAction from \"./../../actions/stock.action\";\r\n\r\n// Import Constants\r\nimport { imageUrl } from \"./../../Constatns\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"80%\",\r\n  },\r\n  field: {\r\n    marginTop: 16,\r\n  },\r\n  card: {\r\n    padding: 20,\r\n  },\r\n}));\r\n\r\nexport default function StockEdit(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const stockReducer = useSelector(({ stockReducer }) => stockReducer);\r\n\r\n  useEffect(() => {\r\n    let id = props.match.params.id;\r\n    dispatch(stockAction.getProductById(id));\r\n  }, []);\r\n\r\n  const showPreviewImage = (values) => {\r\n    if (values.file_obj) {\r\n      return <img src={values.file_obj} style={{ height: 100 }} />;\r\n    } else if (values.image) {\r\n      return (\r\n        <img\r\n          src={`${imageUrl}/images/${values.image}`}\r\n          style={{ height: 100 }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const showForm = ({ values, setFieldValue, isValid, dirty }) => {\r\n    return (\r\n      <Form>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h3\">\r\n              Edit Stock {props.match.params.id}\r\n            </Typography>\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"name\"\r\n              type=\"text\"\r\n              label=\"Name\"\r\n            />\r\n            <br />\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"price\"\r\n              type=\"number\"\r\n              label=\"Price\"\r\n            />\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"stock\"\r\n              type=\"number\"\r\n              label=\"Stock\"\r\n            />\r\n\r\n            <div style={{ marginTop: 20 }}>{showPreviewImage(values)}</div>\r\n\r\n            <div className={classes.field}>\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/images/ic_photo.png`}\r\n                style={{ width: 25, height: 20 }}\r\n              />\r\n              <span\r\n                style={{ color: \"#00B0CD\", marginLeft: 10, marginRight: 30 }}\r\n              >\r\n                Add Picture\r\n              </span>\r\n              <br />\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  e.preventDefault();\r\n                  setFieldValue(\"file\", e.target.files[0]); // for upload\r\n                  setFieldValue(\r\n                    \"file_obj\",\r\n                    URL.createObjectURL(e.target.files[0])\r\n                  ); // for preview image\r\n                }}\r\n                name=\"image\"\r\n                click-type=\"type1\"\r\n                className=\"picupload\"\r\n                multiple\r\n                accept=\"image/*\"\r\n                id=\"files\"\r\n                style={{ padding: \"20px 0\" }}\r\n              />\r\n            </div>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              disabled={!(isValid && dirty)}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button component={Link} to=\"/stock\" color=\"default\" rasied=\"true\">\r\n              Cancel\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {/* Main content */}\r\n\r\n      <div className=\"box-body\" style={{ marginTop: 30 }}>\r\n        <Formik\r\n          validate={(values) => {\r\n            let errors = {};\r\n            if (!values.name) errors.name = \"Enter name\";\r\n            if (!values.stock) errors.stock = \"Enter stock\";\r\n            if (!values.price) errors.price = \"Enter price\";\r\n            return errors;\r\n          }}\r\n          enableReinitialize\r\n          initialValues={\r\n            stockReducer.result\r\n              ? stockReducer.result\r\n              : { name: \" \", price: 0, stock: 0 }\r\n          }\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            let formData = new FormData();\r\n            formData.append(\"id\", values.id);\r\n            formData.append(\"name\", values.name);\r\n            formData.append(\"price\", values.price);\r\n            formData.append(\"stock\", values.stock);\r\n            if (values.file) {\r\n              formData.append(\"image\", values.file);\r\n            }\r\n            dispatch(stockAction.updateProduct(formData, props.history));\r\n\r\n            setSubmitting(false);\r\n          }}\r\n        >\r\n          {(props) => showForm(props)}\r\n        </Formik>\r\n      </div>\r\n      {/* /.content */}\r\n    </Container>\r\n  );\r\n}\r\n","D:\\Project\\cmstock-reactjs-material\\src\\components\\fragments\\Menu.js",["134","135","136","137","138","139","140","141","142","143","144"],"import React from \"react\";\r\n\r\n// Material UI\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport {\r\n  Layers as LayersIcon,\r\n  BarChart as BarChartIcon,\r\n  Person as PersonIcon,\r\n} from \"@material-ui/icons\";\r\n\r\n//Route\r\nimport { NavLink, Navllink } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundImage:\r\n      \"url(\" + `${process.env.PUBLIC_URL}/images/background_menu.jpg` + \")\",\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  isActive: {\r\n    backgroundColor: \"#e0f5fd\",\r\n    color: \"#0080ff\",\r\n  },\r\n}));\r\n\r\nfunction Menu({ handleDrawerOpen, handleDrawerClose }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={handleDrawerOpen}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <img\r\n          height={250}\r\n          src={`${process.env.PUBLIC_URL}/images/menu_banner.jpg`}\r\n          alt=\"\"\r\n        />\r\n\r\n        <List>\r\n          {/* Stock */}\r\n          <ListItem\r\n            component={NavLink}\r\n            to=\"/stock\"\r\n            button\r\n            key=\"stock\"\r\n            activeClassName={classes.isActive}\r\n          >\r\n            <ListItemIcon>\r\n              <LayersIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Stock\" />\r\n          </ListItem>\r\n\r\n          {/* Report */}\r\n          <ListItem\r\n            component={NavLink}\r\n            to=\"/report\"\r\n            button\r\n            key=\"report\"\r\n            activeClassName={classes.isActive}\r\n          >\r\n            <ListItemIcon>\r\n              <BarChartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Report\" />\r\n          </ListItem>\r\n\r\n          {/* AboutUS */}\r\n          <ListItem\r\n            component={NavLink}\r\n            to=\"/about\"\r\n            button\r\n            key=\"about\"\r\n            activeClassName={classes.isActive}\r\n          >\r\n            <ListItemIcon>\r\n              <AccountBoxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"About\" />\r\n          </ListItem>\r\n\r\n          {/* AboutUS */}\r\n          <ListItem\r\n            component={NavLink}\r\n            to=\"/user\"\r\n            button\r\n            key=\"user\"\r\n            activeClassName={classes.isActive}\r\n          >\r\n            <ListItemIcon>\r\n              <PersonIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"User\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\Stock.js",["145","146","147","148","149"],"import { React, useEffect, useState } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\n//Route\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//  Material Ui\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\n// Redux-Hook\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as stockAction from \"./../../actions/stock.action\";\r\n\r\n// Constatns\r\nimport { imageUrl } from \"./../../Constatns\";\r\n\r\nfunction Stock(props) {\r\n  // Call Redux Action\r\n  const dispatch = useDispatch();\r\n  const stockReducer = useSelector(({ stockReducer }) => stockReducer);\r\n\r\n  // useState\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n  const handleClickOpen = (item) => {\r\n    setSelectedItem(item);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const showDeletionConfirmDlg = () => {\r\n    return selectedItem ? (\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          Are you sure to delete this item Id : {selectedItem.id}?\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <img\r\n                src={`${imageUrl}/images/${selectedItem.image}`}\r\n                style={{ width: 50, height: 50, borderRadius: \"5%\" }}\r\n              />\r\n              <span style={{ marginLeft: 20 }}>{selectedItem.name}</span>\r\n            </div>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(stockAction.deleteProduct(selectedItem.id));\r\n              handleClose();\r\n            }}\r\n            color=\"secondary\"\r\n            autoFocus\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    ) : null;\r\n  };\r\n\r\n  // Config Material Theme\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: \"700\",\r\n      marginTop: 0,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    dispatch(stockAction.getProducts());\r\n  }, []);\r\n\r\n  // Loop Fetch DataTable\r\n  const columns = [\r\n    {\r\n      title: \"Product Code\",\r\n      render: (item) => (\r\n        <Typography variant=\"body1\">{item.product_code}</Typography>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Image\",\r\n      cellStyle: { padding: 0 },\r\n      render: (item) => (\r\n        <img\r\n          src={`${imageUrl}/images/${item.image}?dummy=${Math.random()}`}\r\n          style={{ width: 70, height: 70, borderRadius: \"5%\" }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      cellStyle: { minWidth: 500 },\r\n      render: (item) => <Typography variant=\"body1\">{item.name}</Typography>,\r\n    },\r\n\r\n    {\r\n      title: \"Price\",\r\n      render: (item) => (\r\n        <Typography variant=\"body1\">\r\n          <NumberFormat\r\n            value={item.price}\r\n            displayType={\"text\"}\r\n            thousandSeparator={true}\r\n            decimalScale={2}\r\n            fixedDecimalScale={true}\r\n            prefix={\"฿\"}\r\n          />\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Stock\",\r\n      render: (item) => (\r\n        <Typography variant=\"body1\">\r\n          <NumberFormat\r\n            value={item.stock}\r\n            displayType={\"text\"}\r\n            thousandSeparator={true}\r\n            decimalScale={0}\r\n            fixedDecimalScale={true}\r\n            suffix={\" pcs\"}\r\n          />\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Updated\",\r\n      render: (item) => (\r\n        <Typography>\r\n          <Moment format=\"DD/MM/YYYY\">{item.updatedAt}</Moment>\r\n        </Typography>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      icon: () => <Edit />,\r\n      iconProps: { color: \"primary\" },\r\n      tooltip: \"Edit\",\r\n      onClick: (event, rowData) => {\r\n        props.history.push(\"/stockEdit/\" + rowData.id);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <DeleteOutline />,\r\n      iconProps: { color: \"action\" },\r\n      tooltip: \"Delete\",\r\n      onClick: (event, rowData) => {\r\n        handleClickOpen(rowData);\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MaterialTable\r\n        columns={columns}\r\n        data={stockReducer.result ? stockReducer.result : []}\r\n        title=\"Stock\"\r\n        actions={actions}\r\n        options={{\r\n          pageSize: 5,\r\n          search: true,\r\n          rowStyle: (rowData, index) => ({\r\n            backgroundColor: index % 2 == 0 ? \"#f8faf9\" : \"#fff\",\r\n          }),\r\n        }}\r\n        // Button to Route StockCreate Page\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <MTableToolbar {...props} />\r\n              <div style={{ padding: \"0px 10px\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  component={Link}\r\n                  to=\"/stockCreate\"\r\n                >\r\n                  Create\r\n                </Button>\r\n                {/* <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  component={Link}\r\n                  to=\"/stockCreate\"\r\n                >\r\n                  Delete\r\n                </Button> */}\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      {showDeletionConfirmDlg()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Stock;\r\n","D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\StockCreate.js",["150","151"],"import React from \"react\";\r\n\r\n// Route\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Formik\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\n\r\n// Material UI\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// Redux-Hook\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as stockAction from \"./../../actions/stock.action\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"80%\",\r\n    marginTop: 100,\r\n  },\r\n  field: {\r\n    marginTop: 16,\r\n  },\r\n  card: {\r\n    padding: 20,\r\n  },\r\n}));\r\n\r\nexport default function StockCreate(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const showPreviewImage = (values) => {\r\n    if (values.file_obj) {\r\n      return (\r\n        <img src={values.file_obj} style={{ height: 100, marginTop: 16 }} />\r\n      );\r\n    }\r\n  };\r\n\r\n  const showForm = ({ values, setFieldValue, isValid, dirty }) => {\r\n    return (\r\n      <Form>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h3\">\r\n              Create Stock\r\n            </Typography>\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"product_code\"\r\n              type=\"number\"\r\n              label=\"Product Code\"\r\n            />\r\n            <br />\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"name\"\r\n              type=\"text\"\r\n              label=\"Name\"\r\n            />\r\n            <br />\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"price\"\r\n              type=\"number\"\r\n              label=\"Price\"\r\n            />\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"stock\"\r\n              type=\"number\"\r\n              label=\"Stock\"\r\n            />\r\n\r\n            <div>{showPreviewImage(values)}</div>\r\n\r\n            <div className={classes.field}>\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/images/ic_photo.png`}\r\n                style={{ width: 25, height: 20 }}\r\n              />\r\n              <span\r\n                style={{ color: \"#00B0CD\", marginLeft: 10, marginRight: 30 }}\r\n              >\r\n                Add Picture\r\n              </span>\r\n              <br />\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  e.preventDefault();\r\n                  setFieldValue(\"file\", e.target.files[0]); // for upload\r\n                  setFieldValue(\r\n                    \"file_obj\",\r\n                    URL.createObjectURL(e.target.files[0])\r\n                  );\r\n\r\n                  // for preview image\r\n                }}\r\n                name=\"image\"\r\n                click-type=\"type1\"\r\n                className=\"picupload\"\r\n                multiple\r\n                accept=\"image/*\"\r\n                id=\"files\"\r\n                style={{ padding: \"20px 0\" }}\r\n              />\r\n            </div>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              disabled={!(isValid && dirty)}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button component={Link} to=\"/stock\" color=\"default\" rasied=\"true\">\r\n              Cancel\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {/* Main content */}\r\n\r\n      <div className=\"box-body\" style={{ marginTop: 30 }}>\r\n        <Formik\r\n          validate={(values) => {\r\n            let errors = {};\r\n            if (!values.product_code)\r\n              errors.product_code = \"Enter Product code\";\r\n            if (!values.name) errors.name = \"Enter name\";\r\n            if (!values.stock) errors.stock = \"Enter stock\";\r\n            if (!values.price) errors.price = \"Enter price\";\r\n            return errors;\r\n          }}\r\n          initialValues={{ name: \"\", stock: 0, price: 0 }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            let formData = new FormData();\r\n            formData.append(\"product_code\", values.product_code);\r\n            formData.append(\"name\", values.name);\r\n            formData.append(\"price\", values.price);\r\n            formData.append(\"stock\", values.stock);\r\n            formData.append(\"image\", values.file);\r\n\r\n            dispatch(stockAction.addProduct(formData, props.history));\r\n            // alert(JSON.stringify(values));\r\n            alert(JSON.stringify(props.history));\r\n            setSubmitting(false);\r\n          }}\r\n        >\r\n          {(props) => showForm(props)}\r\n        </Formik>\r\n      </div>\r\n      {/* /.content */}\r\n    </Container>\r\n  );\r\n}\r\n","D:\\Project\\cmstock-reactjs-material\\src\\components\\fragments\\Header.js",["152"],"import React from \"react\";\r\n\r\n// Material UI\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\n// Redux-Hook\r\nimport * as loginActions from \"./../../actions/login.action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"static\"\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: props.open,\r\n        })}\r\n      >\r\n        <Toolbar style={{ backgroundColor: \"#FF5733\" }}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, props.open && classes.hide)}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={props.handleDrawerOpen}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            OwlDev\r\n          </Typography>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"inherit\"\r\n            onClick={() => {\r\n              dispatch(loginActions.logout({ ...props }));\r\n            }}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(Header);\r\n","D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\Login.js",["153","154","155","156"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  CardActions,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport * as loginAction from \"./../../actions/login.action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport loginReducer from \"../../reducers/login.reducer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 200,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login(props) {\r\n  const loginReducer = useSelector(({ loginReducer }) => loginReducer);\r\n  const classes = useStyles();\r\n  const [account, setAccount] = React.useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`${process.env.PUBLIC_URL}/images/authen_header.jpg`}\r\n        title=\"Contemplative Reptile\"\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          Login\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          noValidate\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            dispatch(loginAction.login({ ...account, ...props }));\r\n\r\n            // history.push(\"/stock\");\r\n          }}\r\n        >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            value={account.username}\r\n            onChange={(e) => {\r\n              setAccount({ ...account, username: e.target.value });\r\n            }}\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={account.password}\r\n            onChange={(e) => {\r\n              setAccount({ ...account, password: e.target.value });\r\n            }}\r\n          />\r\n\r\n          {loginReducer.error && (\r\n            <Alert severity=\"error\">{loginReducer.result}</Alert>\r\n          )}\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Button\r\n            onClick={() => props.history.push(\"/register\")}\r\n            fullWidth\r\n            size=\"small\"\r\n            color=\"primary\"\r\n          >\r\n            Register\r\n          </Button>\r\n          {/* #spy {JSON.stringify(account)} */}\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\Register.js",["157","158","159","160","161","162","163","164"],"import { React, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Formik } from \"formik\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport {\r\n  CardActions,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport { apiUrl, server } from \"./../../Constatns\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport loginReducer from \"../../reducers/login.reducer\";\r\nimport * as loginAction from \"./../../actions/login.action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 200,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Register(props) {\r\n  const [isError, setIsError] = useState(false);\r\n  const [showDialog, setShowDialog] = useState(false);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const loginReducer = useSelector(({ loginReducer }) => loginReducer);\r\n  function showForm({\r\n    values,\r\n    handleChange,\r\n    handleSubmit,\r\n    setFieldValue,\r\n    isSubmitting,\r\n  }) {\r\n    return (\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          value={values.username}\r\n          onChange={handleChange}\r\n          id=\"username\"\r\n          label=\"Username\"\r\n          autoComplete=\"username\"\r\n          autoFocus\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          value={values.password}\r\n          onChange={handleChange}\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"current-password\"\r\n        />\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          value={values.email}\r\n          onChange={handleChange}\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          id=\"email\"\r\n          autoComplete=\"current-email\"\r\n        />\r\n\r\n        {isError && (\r\n          <Alert severity=\"error\">Error , your registration is Failed</Alert>\r\n        )}\r\n\r\n        {/* Register Button */}\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          disabled={isSubmitting}\r\n          // onClick={onClick}\r\n        >\r\n          Register\r\n        </Button>\r\n        <Button\r\n          onClick={() => props.history.goBack()}\r\n          fullWidth\r\n          size=\"small\"\r\n          color=\"primary\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={`${process.env.PUBLIC_URL}/images/authen_header.jpg`}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Register\r\n          </Typography>\r\n\r\n          <Formik\r\n            initialValues={{ username: \"\", password: \"\", email: \"\" }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              // alert(JSON.stringify(values)) Debugmode\r\n              setSubmitting(true);\r\n              Axios.post(\"http://localhost:8085/api/v2/authen/register\", values)\r\n                .then((result) => {\r\n                  setSubmitting(false);\r\n                  alert(JSON.stringify(result.data));\r\n                  const { data } = result;\r\n                  debugger;\r\n                  if (data.result == \"ok\") {\r\n                    dispatch(loginAction.setSuccess());\r\n                    setShowDialog(true);\r\n                  } else {\r\n                    // dispatch(\r\n                    //   loginAction.hasError(\r\n                    //     \"Error , your information is not correct\"\r\n                    //   )\r\n                    // );\r\n\r\n                    setIsError(true);\r\n                  }\r\n                })\r\n                .catch((error) => {\r\n                  setIsError(true);\r\n                });\r\n            }}\r\n          >\r\n            {(props) => showForm(props)}\r\n          </Formik>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Dialog\r\n        open={showDialog}\r\n        keepMounted\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          <CheckCircleIcon /> {\"SUCCESS\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Your Registration is successfull\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              props.history.push(\"/login\");\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Project\\cmstock-reactjs-material\\src\\reducers\\register.reducer.js",[],"D:\\Project\\cmstock-reactjs-material\\src\\reducers\\stock.reducer.js",["165"],"import { STOCK_SUCCESS, STOCK_FETCHING, STOCK_FAILED } from \"./../Constatns.js\";\r\n\r\nconst initialState = {\r\n  result: null,\r\n  isFetching: false,\r\n  isError: false,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case STOCK_SUCCESS:\r\n      return { ...state, result: payload, isFetching: false, isError: false };\r\n\r\n    case STOCK_FAILED:\r\n      return { ...state, result: null, isFetching: false, isError: true };\r\n\r\n    case STOCK_FETCHING:\r\n      return { ...state, result: null, isFetching: true, isError: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\Project\\cmstock-reactjs-material\\src\\reducers\\transaction.reducer.js",[],"D:\\Project\\cmstock-reactjs-material\\src\\reducers\\shop.reducer.js",[],"D:\\Project\\cmstock-reactjs-material\\src\\reducers\\login.reducer.js",["166"],"import {\r\n  LOGIN_FAILED,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FETCHING,\r\n  LOGOUT,\r\n} from \"./../Constatns\";\r\n\r\nconst initialState = {\r\n  result: null,\r\n  isFetching: false,\r\n  error: false,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case LOGIN_FETCHING:\r\n      return { ...state, isFetching: true, error: false, result: null };\r\n    case LOGIN_SUCCESS:\r\n      return { ...state, isFetching: false, error: false, result: payload };\r\n    case LOGIN_FAILED:\r\n      return { ...state, isFetching: false, error: true, result: payload };\r\n    case LOGOUT:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\Project\\cmstock-reactjs-material\\src\\actions\\login.action.js",[],"D:\\Project\\cmstock-reactjs-material\\src\\Constatns.js",[],"D:\\Project\\cmstock-reactjs-material\\src\\utils\\HttpClient.js",["167"],"import axios from \"axios\";\r\nimport join from \"url-join\";\r\nimport {\r\n  server,\r\n  apiUrl,\r\n  NOT_CONNECT_NETWORK,\r\n  NETWORK_CONNECTION_MESSAGE,\r\n} from \"./../Constatns.js\";\r\n\r\nconst isAbsoluteURLRegex = /^(?:\\w+:)\\/\\//;\r\n\r\naxios.interceptors.request.use(async (config) => {\r\n  if (!isAbsoluteURLRegex.test(config.url)) {\r\n    config.url = join(apiUrl, config.url);\r\n  }\r\n  config.timeout = 10000; // 10 Second\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    debugger;\r\n    console.log(JSON.stringify(error, undefined, 2));\r\n    if (axios.isCancel(error)) {\r\n      return Promise.reject(error);\r\n    } else if (!error.response) {\r\n      return Promise.reject({\r\n        code: NOT_CONNECT_NETWORK,\r\n        message: NETWORK_CONNECTION_MESSAGE,\r\n      });\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const httpClient = axios;\r\n","D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\Report.js",[],"D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\AboutUs.js",[],"D:\\Project\\cmstock-reactjs-material\\src\\actions\\stock.action.js",[],"D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\User.js",["168","169","170","171","172"],"import { React, useEffect, useState } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\n//Route\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//  Material Ui\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\n// Redux-Hook\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as userAction from \"./../../actions/user.action\";\r\n\r\n// Constatns\r\nimport { imageUrl } from \"./../../Constatns\";\r\n\r\nfunction User(props) {\r\n  // Call Redux Action\r\n  const dispatch = useDispatch();\r\n  const userReducer = useSelector(({ userReducer }) => userReducer);\r\n\r\n  // useState\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n  const handleClickOpen = (item) => {\r\n    setSelectedItem(item);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const showDeletionConfirmDlg = () => {\r\n    return selectedItem ? (\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          Are you sure to delete this item Id : {selectedItem.id}?\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <span style={{ marginLeft: 20 }}>{selectedItem.name}</span>\r\n            </div>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(userAction.deleteUser(selectedItem.id));\r\n              handleClose();\r\n            }}\r\n            color=\"secondary\"\r\n            autoFocus\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    ) : null;\r\n  };\r\n\r\n  // Config Material Theme\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: \"700\",\r\n      marginTop: 0,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    dispatch(userAction.getUser());\r\n  }, []);\r\n\r\n  // Loop Fetch DataTable\r\n  const columns = [\r\n    {\r\n      title: \"Id\",\r\n      //   cellStyle: { minWidth: 10 },\r\n      render: (item) => <Typography variant=\"body1\">{item.id}</Typography>,\r\n    },\r\n\r\n    {\r\n      title: \"Username\",\r\n      cellStyle: { minWidth: 100 },\r\n      render: (item) => (\r\n        <Typography variant=\"body1\">{item.username}</Typography>\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"Create\",\r\n      render: (item) => (\r\n        <Typography>\r\n          <Moment format=\"DD/MM/YYYY\">{item.createAt}</Moment>\r\n        </Typography>\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"Update\",\r\n      render: (item) => (\r\n        <Typography>\r\n          <Moment format=\"DD/MM/YYYY\">{item.updateAt}</Moment>\r\n        </Typography>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      icon: () => <Edit />,\r\n      iconProps: { color: \"primary\" },\r\n      tooltip: \"Edit\",\r\n      onClick: (event, rowData) => {\r\n        props.history.push(\"/userEdit/\" + rowData.id);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <DeleteOutline />,\r\n      iconProps: { color: \"action\" },\r\n      tooltip: \"Delete\",\r\n      onClick: (event, rowData) => {\r\n        handleClickOpen(rowData);\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MaterialTable\r\n        columns={columns}\r\n        data={userReducer.result ? userReducer.result : []}\r\n        title=\"User\"\r\n        actions={actions}\r\n        options={{\r\n          pageSize: 8,\r\n          search: true,\r\n          rowStyle: (rowData, index) => ({\r\n            backgroundColor: index % 2 == 0 ? \"#f8faf9\" : \"#fff\",\r\n          }),\r\n        }}\r\n        // Button to Route StockCreate Page\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <MTableToolbar {...props} />\r\n              <div style={{ padding: \"0px 10px\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  component={Link}\r\n                  to=\"/userCreate\"\r\n                >\r\n                  Create\r\n                </Button>\r\n                {/* <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  component={Link}\r\n                  to=\"/stockCreate\"\r\n                >\r\n                  Delete\r\n                </Button> */}\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      {showDeletionConfirmDlg()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","D:\\Project\\cmstock-reactjs-material\\src\\actions\\user.action.js",[],"D:\\Project\\cmstock-reactjs-material\\src\\reducers\\user.reducer.js",["173","174","175"],"import {\r\n  USER_SUCCESS,\r\n  USER_FETCHING,\r\n  USER_FAILED,\r\n  USER_UPDATED,\r\n} from \"./../Constatns.js\";\r\n\r\nconst initialState = {\r\n  result: null,\r\n  isFetching: false,\r\n  isError: false,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case USER_SUCCESS:\r\n      return { ...state, result: payload, isFetching: false, isError: false };\r\n\r\n    case USER_SUCCESS:\r\n      return { ...state, result: payload, isFetching: false, isError: false };\r\n\r\n    case USER_FAILED:\r\n      return { ...state, result: null, isFetching: false, isError: true };\r\n\r\n    case USER_FETCHING:\r\n      return { ...state, result: null, isFetching: true, isError: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\UserCreate.js",[],"D:\\Project\\cmstock-reactjs-material\\src\\components\\pages\\UserEdit.js",["176","177","178","179"],"import { React, useEffect, useState } from \"react\";\r\n\r\n// Route\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Formik\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\n\r\n// Material UI\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// Redux-Hook\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as userAction from \"./../../actions/user.action\";\r\n\r\n// Import Constants\r\nimport { imageUrl } from \"./../../Constatns\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"80%\",\r\n  },\r\n  field: {\r\n    marginTop: 16,\r\n  },\r\n  card: {\r\n    padding: 20,\r\n  },\r\n}));\r\n\r\nexport default function UserEdit(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const userReducer = useSelector(({ userReducer }) => userReducer);\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let id = props.match.params.id;\r\n    dispatch(userAction.getUserById(id));\r\n  }, []);\r\n\r\n  const showForm = ({ values, setFieldValue, isValid, dirty }) => {\r\n    return (\r\n      <Form>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h3\">\r\n              Edit User {props.match.params.id}\r\n            </Typography>\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"username\"\r\n              type=\"text\"\r\n              label=\"Username\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            <br />\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n            />\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"email\"\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n            />\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"level\"\r\n              type=\"text\"\r\n              label=\"Level\"\r\n              variant=\"outlined\"\r\n            />\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              disabled={!(isValid && dirty)}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button component={Link} to=\"/user\" color=\"default\" rasied=\"true\">\r\n              Cancel\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {/* Main content */}\r\n\r\n      <div className=\"box-body\" style={{ marginTop: 30 }}>\r\n        <Formik\r\n          validate={(values) => {\r\n            let errors = {};\r\n            if (!values.username) errors.name = \"Enter Username\";\r\n            if (!values.password) errors.stock = \"Enter Password\";\r\n            if (!values.level) errors.level = \"Enter Level\";\r\n            return errors;\r\n          }}\r\n          enableReinitialize\r\n          initialValues={\r\n            userReducer.result\r\n              ? userReducer.result\r\n              : { username: \" \", password: \" \", level: \" \" }\r\n          }\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            // let formData = new FormData();\r\n            // formData.append(\"id\", values.id);\r\n            // formData.append(\"username\", values.username);\r\n            // formData.append(\"password\", values.password);\r\n            // formData.append(\"level\", values.level);\r\n            // formData.append(\"stock\", values.stock);\r\n            // if (values.file) {\r\n            //   formData.append(\"image\", values.file);\r\n            // }\r\n\r\n            dispatch(userAction.updateUser(values, props.history));\r\n\r\n            setSubmitting(false);\r\n          }}\r\n        >\r\n          {(props) => showForm(props)}\r\n        </Formik>\r\n      </div>\r\n      {/* /.content */}\r\n    </Container>\r\n  );\r\n}\r\n",{"ruleId":"180","severity":1,"message":"181","line":12,"column":20,"nodeType":"182","messageId":"183","endLine":12,"endColumn":31},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":4,"column":10,"nodeType":"182","messageId":"190","endLine":4,"endColumn":16},{"ruleId":"188","severity":1,"message":"191","line":7,"column":3,"nodeType":"182","messageId":"190","endLine":7,"endColumn":17},{"ruleId":"188","severity":1,"message":"192","line":8,"column":3,"nodeType":"182","messageId":"190","endLine":8,"endColumn":16},{"ruleId":"188","severity":1,"message":"193","line":29,"column":3,"nodeType":"182","messageId":"190","endLine":29,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":118,"column":6,"nodeType":"196","endLine":118,"endColumn":8,"suggestions":"197"},{"ruleId":"194","severity":1,"message":"198","line":46,"column":6,"nodeType":"196","endLine":46,"endColumn":8,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":50,"column":14,"nodeType":"202","endLine":50,"endColumn":67},{"ruleId":"200","severity":1,"message":"201","line":53,"column":9,"nodeType":"202","endLine":56,"endColumn":11},{"ruleId":"200","severity":1,"message":"201","line":100,"column":15,"nodeType":"202","endLine":103,"endColumn":17},{"ruleId":"188","severity":1,"message":"203","line":4,"column":8,"nodeType":"182","messageId":"190","endLine":4,"endColumn":12},{"ruleId":"188","severity":1,"message":"204","line":7,"column":8,"nodeType":"182","messageId":"190","endLine":7,"endColumn":19},{"ruleId":"188","severity":1,"message":"205","line":8,"column":8,"nodeType":"182","messageId":"190","endLine":8,"endColumn":14},{"ruleId":"188","severity":1,"message":"206","line":9,"column":8,"nodeType":"182","messageId":"190","endLine":9,"endColumn":15},{"ruleId":"188","severity":1,"message":"207","line":11,"column":8,"nodeType":"182","messageId":"190","endLine":11,"endColumn":18},{"ruleId":"188","severity":1,"message":"208","line":14,"column":8,"nodeType":"182","messageId":"190","endLine":14,"endColumn":16},{"ruleId":"188","severity":1,"message":"209","line":20,"column":8,"nodeType":"182","messageId":"190","endLine":20,"endColumn":17},{"ruleId":"188","severity":1,"message":"210","line":21,"column":8,"nodeType":"182","messageId":"190","endLine":21,"endColumn":16},{"ruleId":"188","severity":1,"message":"211","line":30,"column":19,"nodeType":"182","messageId":"190","endLine":30,"endColumn":27},{"ruleId":"212","severity":1,"message":"213","line":66,"column":14,"nodeType":"214","messageId":"215","endLine":66,"endColumn":15},{"ruleId":"212","severity":1,"message":"213","line":66,"column":71,"nodeType":"214","messageId":"215","endLine":66,"endColumn":72},{"ruleId":"188","severity":1,"message":"216","line":11,"column":22,"nodeType":"182","messageId":"190","endLine":11,"endColumn":26},{"ruleId":"200","severity":1,"message":"201","line":66,"column":15,"nodeType":"202","endLine":69,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":105,"column":6,"nodeType":"196","endLine":105,"endColumn":8,"suggestions":"217"},{"ruleId":"200","severity":1,"message":"201","line":119,"column":9,"nodeType":"202","endLine":122,"endColumn":11},{"ruleId":"218","severity":1,"message":"219","line":201,"column":40,"nodeType":"214","messageId":"220","endLine":201,"endColumn":42},{"ruleId":"200","severity":1,"message":"201","line":43,"column":9,"nodeType":"202","endLine":43,"endColumn":77},{"ruleId":"200","severity":1,"message":"201","line":98,"column":15,"nodeType":"202","endLine":101,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":58,"column":9,"nodeType":"223","endLine":58,"endColumn":25},{"ruleId":"188","severity":1,"message":"224","line":4,"column":3,"nodeType":"182","messageId":"190","endLine":4,"endColumn":14},{"ruleId":"188","severity":1,"message":"225","line":11,"column":3,"nodeType":"182","messageId":"190","endLine":11,"endColumn":7},{"ruleId":"188","severity":1,"message":"216","line":12,"column":3,"nodeType":"182","messageId":"190","endLine":12,"endColumn":7},{"ruleId":"188","severity":1,"message":"226","line":17,"column":8,"nodeType":"182","messageId":"190","endLine":17,"endColumn":20},{"ruleId":"188","severity":1,"message":"224","line":11,"column":3,"nodeType":"182","messageId":"190","endLine":11,"endColumn":14},{"ruleId":"188","severity":1,"message":"225","line":18,"column":3,"nodeType":"182","messageId":"190","endLine":18,"endColumn":7},{"ruleId":"188","severity":1,"message":"216","line":19,"column":3,"nodeType":"182","messageId":"190","endLine":19,"endColumn":7},{"ruleId":"188","severity":1,"message":"227","line":22,"column":10,"nodeType":"182","messageId":"190","endLine":22,"endColumn":16},{"ruleId":"188","severity":1,"message":"228","line":22,"column":18,"nodeType":"182","messageId":"190","endLine":22,"endColumn":24},{"ruleId":"188","severity":1,"message":"226","line":24,"column":8,"nodeType":"182","messageId":"190","endLine":24,"endColumn":20},{"ruleId":"188","severity":1,"message":"229","line":45,"column":9,"nodeType":"182","messageId":"190","endLine":45,"endColumn":21},{"ruleId":"218","severity":1,"message":"219","line":146,"column":35,"nodeType":"214","messageId":"220","endLine":146,"endColumn":37},{"ruleId":"230","severity":1,"message":"231","line":9,"column":1,"nodeType":"232","endLine":23,"endColumn":3},{"ruleId":"230","severity":1,"message":"231","line":14,"column":1,"nodeType":"232","endLine":27,"endColumn":3},{"ruleId":"188","severity":1,"message":"228","line":4,"column":3,"nodeType":"182","messageId":"190","endLine":4,"endColumn":9},{"ruleId":"188","severity":1,"message":"233","line":3,"column":8,"nodeType":"182","messageId":"190","endLine":3,"endColumn":20},{"ruleId":"188","severity":1,"message":"216","line":11,"column":22,"nodeType":"182","messageId":"190","endLine":11,"endColumn":26},{"ruleId":"188","severity":1,"message":"234","line":26,"column":10,"nodeType":"182","messageId":"190","endLine":26,"endColumn":18},{"ruleId":"194","severity":1,"message":"195","line":101,"column":6,"nodeType":"196","endLine":101,"endColumn":8,"suggestions":"235"},{"ruleId":"218","severity":1,"message":"219","line":168,"column":40,"nodeType":"214","messageId":"220","endLine":168,"endColumn":42},{"ruleId":"188","severity":1,"message":"236","line":5,"column":3,"nodeType":"182","messageId":"190","endLine":5,"endColumn":15},{"ruleId":"230","severity":1,"message":"231","line":14,"column":1,"nodeType":"232","endLine":31,"endColumn":3},{"ruleId":"237","severity":1,"message":"238","line":19,"column":5,"nodeType":"239","messageId":"220","endLine":20,"endColumn":79},{"ruleId":"188","severity":1,"message":"234","line":24,"column":10,"nodeType":"182","messageId":"190","endLine":24,"endColumn":18},{"ruleId":"188","severity":1,"message":"240","line":42,"column":10,"nodeType":"182","messageId":"190","endLine":42,"endColumn":18},{"ruleId":"188","severity":1,"message":"241","line":42,"column":20,"nodeType":"182","messageId":"190","endLine":42,"endColumn":31},{"ruleId":"194","severity":1,"message":"198","line":47,"column":6,"nodeType":"196","endLine":47,"endColumn":8,"suggestions":"242"},"no-use-before-define","'middlewares' was used before it was defined.","Identifier","usedBeforeDefined","no-native-reassign",["243"],"no-negated-in-lhs",["244"],"no-unused-vars","'Button' is defined but never used.","unusedVar","'createMuiTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["245"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["246"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'clsx' is defined but never used.","'CssBaseline' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'MenuIcon' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'Navllink' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Grid' is defined but never used.",["247"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'CardActions' is defined but never used.","'Link' is defined but never used.","'loginReducer' is defined but never used.","'apiUrl' is defined but never used.","'server' is defined but never used.","'loginReducer' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'NumberFormat' is defined but never used.","'imageUrl' is defined but never used.",["248"],"'USER_UPDATED' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.",["249"],"no-global-assign","no-unsafe-negation",{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"250","fix":"254"},{"desc":"250","fix":"255"},{"desc":"252","fix":"256"},"Update the dependencies array to be: [dispatch]",{"range":"257","text":"258"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"259","text":"260"},{"range":"261","text":"258"},{"range":"262","text":"258"},{"range":"263","text":"260"},[2980,2982],"[dispatch]",[1263,1265],"[dispatch, props.match.params.id]",[3188,3190],[2998,3000],[1312,1314]]