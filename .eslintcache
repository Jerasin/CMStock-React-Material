[{"D:\\Project\\front-end\\src\\index.js":"1","D:\\Project\\front-end\\src\\App.js":"2","D:\\Project\\front-end\\src\\reducers\\index.js":"3","D:\\Project\\front-end\\src\\Constatns.js":"4","D:\\Project\\front-end\\src\\actions\\login.action.js":"5","D:\\Project\\front-end\\src\\components\\fragments\\Header.js":"6","D:\\Project\\front-end\\src\\components\\fragments\\Menu.js":"7","D:\\Project\\front-end\\src\\components\\pages\\Register.js":"8","D:\\Project\\front-end\\src\\components\\pages\\Report.js":"9","D:\\Project\\front-end\\src\\components\\pages\\Stock.js":"10","D:\\Project\\front-end\\src\\components\\pages\\StockCreate.js":"11","D:\\Project\\front-end\\src\\components\\pages\\Login.js":"12","D:\\Project\\front-end\\src\\components\\pages\\User.js":"13","D:\\Project\\front-end\\src\\components\\pages\\AboutUs.js":"14","D:\\Project\\front-end\\src\\components\\pages\\UserEdit.js":"15","D:\\Project\\front-end\\src\\components\\pages\\Borrow.js":"16","D:\\Project\\front-end\\src\\components\\pages\\UserCreate.js":"17","D:\\Project\\front-end\\src\\components\\pages\\StockEdit.js":"18","D:\\Project\\front-end\\src\\reducers\\register.reducer.js":"19","D:\\Project\\front-end\\src\\reducers\\stock.reducer.js":"20","D:\\Project\\front-end\\src\\reducers\\login.reducer.js":"21","D:\\Project\\front-end\\src\\reducers\\transaction.reducer.js":"22","D:\\Project\\front-end\\src\\reducers\\shop.reducer.js":"23","D:\\Project\\front-end\\src\\reducers\\user.reducer.js":"24","D:\\Project\\front-end\\src\\utils\\HttpClient.js":"25","D:\\Project\\front-end\\src\\actions\\stock.action.js":"26","D:\\Project\\front-end\\src\\actions\\user.action.js":"27","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\index.js":"28","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\App.js":"29","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\reducers\\index.js":"30","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\Constatns.js":"31","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\fragments\\Header.js":"32","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\actions\\login.action.js":"33","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\fragments\\Menu.js":"34","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\Login.js":"35","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\Register.js":"36","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\Stock.js":"37","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\StockCreate.js":"38","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\Report.js":"39","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\StockEdit.js":"40","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\User.js":"41","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\AboutUs.js":"42","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\Borrow.js":"43","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\UserEdit.js":"44","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\UserCreate.js":"45","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\reducers\\stock.reducer.js":"46","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\reducers\\login.reducer.js":"47","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\reducers\\shop.reducer.js":"48","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\reducers\\register.reducer.js":"49","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\reducers\\transaction.reducer.js":"50","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\reducers\\user.reducer.js":"51","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\actions\\user.action.js":"52","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\actions\\stock.action.js":"53","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\utils\\HttpClient.js":"54"},{"size":577,"mtime":1614513337933,"results":"55","hashOfConfig":"56"},{"size":5024,"mtime":1614518772236,"results":"57","hashOfConfig":"56"},{"size":476,"mtime":1612855004167,"results":"58","hashOfConfig":"56"},{"size":2454,"mtime":1614067865299,"results":"59","hashOfConfig":"56"},{"size":1922,"mtime":1613915984365,"results":"60","hashOfConfig":"56"},{"size":2464,"mtime":1613114677469,"results":"61","hashOfConfig":"56"},{"size":5709,"mtime":1613915984365,"results":"62","hashOfConfig":"56"},{"size":5521,"mtime":1613915984365,"results":"63","hashOfConfig":"56"},{"size":1022,"mtime":1612851426711,"results":"64","hashOfConfig":"56"},{"size":7015,"mtime":1613915984365,"results":"65","hashOfConfig":"56"},{"size":5539,"mtime":1613915984365,"results":"66","hashOfConfig":"56"},{"size":3105,"mtime":1613915253562,"results":"67","hashOfConfig":"56"},{"size":5501,"mtime":1613028268194,"results":"68","hashOfConfig":"56"},{"size":147,"mtime":1611824907966,"results":"69","hashOfConfig":"56"},{"size":4683,"mtime":1613915984374,"results":"70","hashOfConfig":"56"},{"size":7027,"mtime":1613915984365,"results":"71","hashOfConfig":"56"},{"size":3686,"mtime":1613115787682,"results":"72","hashOfConfig":"56"},{"size":6161,"mtime":1613915984374,"results":"73","hashOfConfig":"56"},{"size":0,"mtime":1611134588012,"results":"74","hashOfConfig":"56"},{"size":611,"mtime":1612166669473,"results":"75","hashOfConfig":"56"},{"size":665,"mtime":1613713951697,"results":"76","hashOfConfig":"56"},{"size":0,"mtime":1611134638044,"results":"77","hashOfConfig":"56"},{"size":0,"mtime":1611134619201,"results":"78","hashOfConfig":"56"},{"size":739,"mtime":1613915984374,"results":"79","hashOfConfig":"56"},{"size":920,"mtime":1611808122992,"results":"80","hashOfConfig":"56"},{"size":2371,"mtime":1613915984365,"results":"81","hashOfConfig":"56"},{"size":2638,"mtime":1613915984365,"results":"82","hashOfConfig":"56"},{"size":577,"mtime":1614513337933,"results":"83","hashOfConfig":"84"},{"size":5024,"mtime":1614518772236,"results":"85","hashOfConfig":"84"},{"size":476,"mtime":1612855004167,"results":"86","hashOfConfig":"84"},{"size":2454,"mtime":1614067865299,"results":"87","hashOfConfig":"84"},{"size":2464,"mtime":1613114677469,"results":"88","hashOfConfig":"84"},{"size":1922,"mtime":1613915984365,"results":"89","hashOfConfig":"84"},{"size":5709,"mtime":1613915984365,"results":"90","hashOfConfig":"84"},{"size":3105,"mtime":1613915253562,"results":"91","hashOfConfig":"84"},{"size":5576,"mtime":1614573490004,"results":"92","hashOfConfig":"84"},{"size":7015,"mtime":1613915984365,"results":"93","hashOfConfig":"84"},{"size":6257,"mtime":1614589050310,"results":"94","hashOfConfig":"84"},{"size":1022,"mtime":1612851426711,"results":"95","hashOfConfig":"84"},{"size":6836,"mtime":1614588529875,"results":"96","hashOfConfig":"84"},{"size":5501,"mtime":1613028268194,"results":"97","hashOfConfig":"84"},{"size":147,"mtime":1611824907966,"results":"98","hashOfConfig":"84"},{"size":7027,"mtime":1613915984365,"results":"99","hashOfConfig":"84"},{"size":4683,"mtime":1613915984374,"results":"100","hashOfConfig":"84"},{"size":3686,"mtime":1613115787682,"results":"101","hashOfConfig":"84"},{"size":611,"mtime":1612166669473,"results":"102","hashOfConfig":"84"},{"size":665,"mtime":1613713951697,"results":"103","hashOfConfig":"84"},{"size":0,"mtime":1611134619201,"results":"104","hashOfConfig":"84"},{"size":0,"mtime":1611134588012,"results":"105","hashOfConfig":"84"},{"size":0,"mtime":1611134638044,"results":"106","hashOfConfig":"84"},{"size":739,"mtime":1613915984374,"results":"107","hashOfConfig":"84"},{"size":2638,"mtime":1614574626877,"results":"108","hashOfConfig":"84"},{"size":2371,"mtime":1613915984365,"results":"109","hashOfConfig":"84"},{"size":923,"mtime":1614577657027,"results":"110","hashOfConfig":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},"7va56f",{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},"c4kije",{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},"D:\\Project\\front-end\\src\\index.js",["239"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//  import Redux\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport logger from \"redux-logger\";\n\nvar middlewares = (middlewares = applyMiddleware(thunk, logger));\n\nconst store = createStore(reducers, middlewares);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","D:\\Project\\front-end\\src\\App.js",["240","241","242","243","244"],"D:\\Project\\front-end\\src\\reducers\\index.js",[],"D:\\Project\\front-end\\src\\Constatns.js",[],"D:\\Project\\front-end\\src\\actions\\login.action.js",["245","246"],"import {\r\n  LOGIN_FAILED,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FETCHING,\r\n  LOGOUT,\r\n  server,\r\n  LOGIN_STATUS,\r\n} from \"../Constatns\";\r\nimport { httpClient } from \"./../utils/HttpClient\";\r\n\r\nexport const setStateToFetching = () => ({\r\n  type: LOGIN_FETCHING,\r\n});\r\n\r\nexport const setStateToSuccess = (payload) => ({\r\n  type: LOGIN_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const setStateToFailed = (payload) => ({\r\n  type: LOGIN_FAILED,\r\n  payload,\r\n});\r\n\r\nexport const setStateToLogout = () => ({\r\n  type: LOGOUT,\r\n});\r\n\r\nexport const login = ({ username, password, history }) => {\r\n  return async (dispatch) => {\r\n    dispatch(setStateToFetching());\r\n    // setTimeout(() => {\r\n    //   dispatch(setStateToSuccess(\"OK\"));\r\n    //   history.push(\"/stock\");\r\n    // }, 500);\r\n\r\n    const result = await httpClient.post(server.LOGIN_URL, {\r\n      username,\r\n      password,\r\n    });\r\n    if (result.data.token) {\r\n      localStorage.setItem(LOGIN_STATUS, true);\r\n      dispatch(setStateToSuccess(result.data.token));\r\n      history.push(\"/stock\");\r\n    } else {\r\n      dispatch(setStateToFailed(result.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const isLoggedIn = () => {\r\n  const loginStatus = localStorage.getItem(LOGIN_STATUS);\r\n  if (loginStatus) {\r\n    return loginStatus == loginStatus;\r\n  }\r\n};\r\n\r\nexport const logout = ({ history }) => {\r\n  return (dispatch) => {\r\n    localStorage.removeItem(LOGIN_STATUS);\r\n    dispatch(setStateToLogout());\r\n    history.push(\"/\");\r\n  };\r\n};\r\n\r\nexport const setSuccess = () => {\r\n  return (dispatch) => {\r\n    dispatch(setStateToSuccess(LOGIN_STATUS));\r\n  };\r\n};\r\n\r\nexport const reLogin = () => {\r\n  return (dispatch) => {\r\n    const loginStatus = localStorage.getItem(LOGIN_STATUS);\r\n    if (loginStatus) {\r\n      dispatch(setStateToSuccess(loginStatus));\r\n    }\r\n  };\r\n};\r\n\r\nexport const hasError = (payload) => {\r\n  return (dispatch) => {\r\n    dispatch(setStateToFailed(payload));\r\n  };\r\n};\r\n","D:\\Project\\front-end\\src\\components\\fragments\\Header.js",["247"],"import React from \"react\";\r\n\r\n// Material UI\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\n// Redux-Hook\r\nimport * as loginActions from \"./../../actions/login.action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"static\"\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: props.open,\r\n        })}\r\n      >\r\n        <Toolbar style={{ backgroundColor: \"#FF5733\" }}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, props.open && classes.hide)}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={props.handleDrawerOpen}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            OwlDev\r\n          </Typography>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"inherit\"\r\n            onClick={() => {\r\n              dispatch(loginActions.logout({ ...props }));\r\n            }}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(Header);\r\n","D:\\Project\\front-end\\src\\components\\fragments\\Menu.js",["248","249","250","251","252","253","254","255","256","257","258"],"import React from \"react\";\r\n\r\n// Material UI\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport {\r\n  Layers as LayersIcon,\r\n  BarChart as BarChartIcon,\r\n  Person as PersonIcon,\r\n} from \"@material-ui/icons\";\r\n\r\n//Route\r\nimport { NavLink, Navllink } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundImage:\r\n      \"url(\" + `${process.env.PUBLIC_URL}/images/background_menu.jpg` + \")\",\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  isActive: {\r\n    backgroundColor: \"#e0f5fd\",\r\n    color: \"#0080ff\",\r\n  },\r\n}));\r\n\r\nfunction Menu({ handleDrawerOpen, handleDrawerClose }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={handleDrawerOpen}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <img\r\n          height={250}\r\n          src={`${process.env.PUBLIC_URL}/images/menu_banner.jpg`}\r\n          alt=\"\"\r\n        />\r\n\r\n        <List>\r\n          {/* Stock */}\r\n          <ListItem\r\n            component={NavLink}\r\n            to=\"/stock\"\r\n            button\r\n            key=\"stock\"\r\n            activeClassName={classes.isActive}\r\n          >\r\n            <ListItemIcon>\r\n              <LayersIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Stock\" />\r\n          </ListItem>\r\n\r\n          {/* Borrow */}\r\n          <ListItem\r\n            component={NavLink}\r\n            to=\"/borrow\"\r\n            button\r\n            key=\"borrow\"\r\n            activeClassName={classes.isActive}\r\n          >\r\n            <ListItemIcon>\r\n              <LayersIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Borrow\" />\r\n          </ListItem>\r\n\r\n          {/* Report */}\r\n          <ListItem\r\n            component={NavLink}\r\n            to=\"/report\"\r\n            button\r\n            key=\"report\"\r\n            activeClassName={classes.isActive}\r\n          >\r\n            <ListItemIcon>\r\n              <BarChartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Report\" />\r\n          </ListItem>\r\n\r\n          {/* AboutUS */}\r\n          <ListItem\r\n            component={NavLink}\r\n            to=\"/about\"\r\n            button\r\n            key=\"about\"\r\n            activeClassName={classes.isActive}\r\n          >\r\n            <ListItemIcon>\r\n              <AccountBoxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"About\" />\r\n          </ListItem>\r\n\r\n          {/* AboutUS */}\r\n          <ListItem\r\n            component={NavLink}\r\n            to=\"/user\"\r\n            button\r\n            key=\"user\"\r\n            activeClassName={classes.isActive}\r\n          >\r\n            <ListItemIcon>\r\n              <PersonIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"User\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","D:\\Project\\front-end\\src\\components\\pages\\Register.js",["259","260","261","262","263","264","265","266"],"import { React, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Formik } from \"formik\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport {\r\n  CardActions,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport { apiUrl, server } from \"./../../Constatns\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport loginReducer from \"../../reducers/login.reducer\";\r\nimport * as loginAction from \"./../../actions/login.action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 200,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Register(props) {\r\n  const [isError, setIsError] = useState(false);\r\n  const [showDialog, setShowDialog] = useState(false);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const loginReducer = useSelector(({ loginReducer }) => loginReducer);\r\n  function showForm({\r\n    values,\r\n    handleChange,\r\n    handleSubmit,\r\n    setFieldValue,\r\n    isSubmitting,\r\n  }) {\r\n    return (\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          value={values.username}\r\n          onChange={handleChange}\r\n          id=\"username\"\r\n          label=\"Username\"\r\n          autoComplete=\"username\"\r\n          autoFocus\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          value={values.password}\r\n          onChange={handleChange}\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"current-password\"\r\n        />\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          value={values.email}\r\n          onChange={handleChange}\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          id=\"email\"\r\n          autoComplete=\"current-email\"\r\n        />\r\n\r\n        {isError && (\r\n          <Alert severity=\"error\">Error , your registration is Failed</Alert>\r\n        )}\r\n\r\n        {/* Register Button */}\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          disabled={isSubmitting}\r\n          // onClick={onClick}\r\n        >\r\n          Register\r\n        </Button>\r\n        <Button\r\n          onClick={() => props.history.goBack()}\r\n          fullWidth\r\n          size=\"small\"\r\n          color=\"primary\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={`${process.env.PUBLIC_URL}/images/authen_header.jpg`}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Register\r\n          </Typography>\r\n\r\n          <Formik\r\n            initialValues={{ username: \"\", password: \"\", email: \"\" }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              setSubmitting(true);\r\n              Axios.post(\"http://localhost:8085/api/v2/authen/register\", values)\r\n                .then((result) => {\r\n                  setSubmitting(false);\r\n                  const { data } = result;\r\n                  debugger;\r\n                  if (data.result == \"ok\") {\r\n                    dispatch(loginAction.setSuccess());\r\n                    setShowDialog(true);\r\n                  } else {\r\n                    // dispatch(\r\n                    //   loginAction.hasError(\r\n                    //     \"Error , your information is not correct\"\r\n                    //   )\r\n                    // );\r\n\r\n                    setIsError(true);\r\n                  }\r\n                })\r\n                .catch((error) => {\r\n                  setIsError(true);\r\n                });\r\n            }}\r\n          >\r\n            {(props) => showForm(props)}\r\n          </Formik>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Dialog\r\n        open={showDialog}\r\n        keepMounted\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          <CheckCircleIcon /> {\"SUCCESS\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Your Registration is successfull\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              props.history.push(\"/login\");\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Project\\front-end\\src\\components\\pages\\Report.js",[],"D:\\Project\\front-end\\src\\components\\pages\\Stock.js",["267","268","269","270","271","272"],"import { React, useEffect, useState } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\n//Route\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//  Material Ui\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\n// Redux-Hook\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as stockAction from \"./../../actions/stock.action\";\r\n\r\n// Constatns\r\nimport { imageUrl } from \"./../../Constatns\";\r\n\r\nfunction Stock(props) {\r\n  // Call Redux Action\r\n  const dispatch = useDispatch();\r\n  const stockReducer = useSelector(({ stockReducer }) => stockReducer);\r\n\r\n  // useState\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n  const handleClickOpen = (item) => {\r\n    setSelectedItem(item);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const showDeletionConfirmDlg = () => {\r\n    return selectedItem ? (\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          Are you sure to delete this item Id : {selectedItem.id}?\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <img\r\n                src={`${imageUrl}/images/${selectedItem.image}`}\r\n                style={{ width: 50, height: 50, borderRadius: \"5%\" }}\r\n              />\r\n              <span style={{ marginLeft: 20 }}>{selectedItem.name}</span>\r\n            </div>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(stockAction.deleteProduct(selectedItem.id));\r\n              handleClose();\r\n            }}\r\n            color=\"secondary\"\r\n            autoFocus\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    ) : null;\r\n  };\r\n\r\n  // Config Material Theme\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: \"700\",\r\n      marginTop: 0,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    dispatch(stockAction.getStocks());\r\n  }, []);\r\n\r\n  // Loop Fetch DataTable\r\n  const columns = [\r\n    {\r\n      title: \"Image\",\r\n      cellStyle: { padding: 0 },\r\n      render: (item) => (\r\n        <img\r\n          src={`${imageUrl}/images/${item.image}?dummy=${Math.random()}`}\r\n          style={{ width: 70, height: 70, borderRadius: \"5%\" }}\r\n        />\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"Device Name\",\r\n      cellStyle: { minWidth: 300 },\r\n      render: (item) => (\r\n        <Typography variant=\"body1\">{item.device_name}</Typography>\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"IMEI\",\r\n      cellStyle: { minWidth: 50 },\r\n      render: (item) => <Typography variant=\"body1\">{item.imei}</Typography>,\r\n    },\r\n\r\n    {\r\n      title: \"Borrow Status\",\r\n      cellStyle: { minWidth: 50 },\r\n      render: (item) => (\r\n        <Typography variant=\"body1\">{item.borrow_status}</Typography>\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"Device Status\",\r\n      cellStyle: { minWidth: 50 },\r\n      render: (item) => (\r\n        <Typography variant=\"body1\">{item.device_status}</Typography>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Price\",\r\n    //   render: (item) => (\r\n    //     <Typography variant=\"body1\">\r\n    //       <NumberFormat\r\n    //         value={item.price}\r\n    //         displayType={\"text\"}\r\n    //         thousandSeparator={true}\r\n    //         decimalScale={2}\r\n    //         fixedDecimalScale={true}\r\n    //         prefix={\"฿\"}\r\n    //       />\r\n    //     </Typography>\r\n    //   ),\r\n    // },\r\n    // {\r\n    //   title: \"Stock\",\r\n    //   render: (item) => (\r\n    //     <Typography variant=\"body1\">\r\n    //       <NumberFormat\r\n    //         value={item.stock}\r\n    //         displayType={\"text\"}\r\n    //         thousandSeparator={true}\r\n    //         decimalScale={0}\r\n    //         fixedDecimalScale={true}\r\n    //         suffix={\" pcs\"}\r\n    //       />\r\n    //     </Typography>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: \"Updated\",\r\n      render: (item) => (\r\n        <Typography>\r\n          <Moment format=\"DD/MM/YYYY\">{item.updatedAt}</Moment>\r\n        </Typography>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      icon: () => <Edit />,\r\n      iconProps: { color: \"primary\" },\r\n      tooltip: \"Edit\",\r\n      onClick: (event, rowData) => {\r\n        props.history.push(\"/stockEdit/\" + rowData.id);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <DeleteOutline />,\r\n      iconProps: { color: \"action\" },\r\n      tooltip: \"Delete\",\r\n      onClick: (event, rowData) => {\r\n        handleClickOpen(rowData);\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MaterialTable\r\n        columns={columns}\r\n        data={stockReducer.result ? stockReducer.result : []}\r\n        title=\"Stock\"\r\n        actions={actions}\r\n        options={{\r\n          pageSize: 5,\r\n          search: true,\r\n          rowStyle: (rowData, index) => ({\r\n            backgroundColor: index % 2 == 0 ? \"#f8faf9\" : \"#fff\",\r\n          }),\r\n        }}\r\n        // Button to Route StockCreate Page\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <MTableToolbar {...props} />\r\n              <div style={{ padding: \"0px 10px\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  component={Link}\r\n                  to=\"/stockCreate\"\r\n                >\r\n                  Create\r\n                </Button>\r\n                {/* <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  component={Link}\r\n                  to=\"/stockCreate\"\r\n                >\r\n                  Delete\r\n                </Button> */}\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      {showDeletionConfirmDlg()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Stock;\r\n","D:\\Project\\front-end\\src\\components\\pages\\StockCreate.js",["273","274"],"import React from \"react\";\r\n\r\n// Route\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Formik\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\n\r\n// Material UI\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// Redux-Hook\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as stockAction from \"./../../actions/stock.action\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"80%\",\r\n    marginTop: 100,\r\n  },\r\n  field: {\r\n    marginTop: 16,\r\n  },\r\n  card: {\r\n    padding: 20,\r\n  },\r\n}));\r\n\r\nexport default function StockCreate(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const showPreviewImage = (values) => {\r\n    if (values.file_obj) {\r\n      return (\r\n        <img src={values.file_obj} style={{ height: 100, marginTop: 16 }} />\r\n      );\r\n    }\r\n  };\r\n\r\n  const showForm = ({ values, setFieldValue, isValid, dirty }) => {\r\n    return (\r\n      <Form>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h3\">\r\n              Create Stock\r\n            </Typography>\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"device_name\"\r\n              type=\"text\"\r\n              label=\"Device Name\"\r\n            />\r\n            <br />\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"imei\"\r\n              type=\"text\"\r\n              label=\"IMEI\"\r\n            />\r\n            <br />\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"borrow_status\"\r\n              type=\"textr\"\r\n              label=\"Borrow Status\"\r\n            />\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"device_status\"\r\n              type=\"text\"\r\n              label=\"Device Status\"\r\n            />\r\n\r\n            <div>{showPreviewImage(values)}</div>\r\n\r\n            <div className={classes.field}>\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/images/ic_photo.png`}\r\n                style={{ width: 25, height: 20 }}\r\n              />\r\n              <span\r\n                style={{ color: \"#00B0CD\", marginLeft: 10, marginRight: 30 }}\r\n              >\r\n                Add Picture\r\n              </span>\r\n              <br />\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  e.preventDefault();\r\n                  setFieldValue(\"file\", e.target.files[0]); // for upload\r\n                  setFieldValue(\r\n                    \"file_obj\",\r\n                    URL.createObjectURL(e.target.files[0])\r\n                  );\r\n\r\n                  // for preview image\r\n                }}\r\n                name=\"image\"\r\n                click-type=\"type1\"\r\n                className=\"picupload\"\r\n                multiple\r\n                accept=\"image/*\"\r\n                id=\"files\"\r\n                style={{ padding: \"20px 0\" }}\r\n              />\r\n            </div>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              disabled={!(isValid && dirty)}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button component={Link} to=\"/stock\" color=\"default\" rasied=\"true\">\r\n              Cancel\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {/* Main content */}\r\n\r\n      <div className=\"box-body\" style={{ marginTop: 30 }}>\r\n        <Formik\r\n          validate={(values) => {\r\n            let errors = {};\r\n            if (!values.device_name) errors.device_name = \"Enter Device Name\";\r\n            if (!values.imei) errors.imei = \"Enter IMEI\";\r\n            if (!values.borrow_status)\r\n              errors.borrow_status = \"Enter Borrow Status\";\r\n            if (!values.device_status)\r\n              errors.device_status = \"Enter Device Status\";\r\n            return errors;\r\n          }}\r\n          initialValues={{\r\n            device_name: \"\",\r\n            imei: \"\",\r\n            borrow_status: \"\",\r\n            device_status: \"\",\r\n          }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            let formData = new FormData();\r\n            formData.append(\"device_name\", values.device_name);\r\n            formData.append(\"imei\", values.imei);\r\n            formData.append(\"borrow_status\", values.borrow_status);\r\n            formData.append(\"device_status\", values.device_status);\r\n            formData.append(\"image\", values.file);\r\n\r\n            dispatch(stockAction.addProduct(formData, props.history));\r\n            // alert(JSON.stringify(values));\r\n            setSubmitting(false);\r\n          }}\r\n        >\r\n          {(props) => showForm(props)}\r\n        </Formik>\r\n      </div>\r\n      {/* /.content */}\r\n    </Container>\r\n  );\r\n}\r\n","D:\\Project\\front-end\\src\\components\\pages\\Login.js",["275","276","277","278"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  CardActions,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport * as loginAction from \"./../../actions/login.action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport loginReducer from \"../../reducers/login.reducer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 200,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login(props) {\r\n  const loginReducer = useSelector(({ loginReducer }) => loginReducer);\r\n  const classes = useStyles();\r\n  const [account, setAccount] = React.useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`${process.env.PUBLIC_URL}/images/authen_header.jpg`}\r\n        title=\"Contemplative Reptile\"\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          Login\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          noValidate\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            dispatch(loginAction.login({ ...account, ...props }));\r\n\r\n            // history.push(\"/stock\");\r\n          }}\r\n        >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            value={account.username}\r\n            onChange={(e) => {\r\n              setAccount({ ...account, username: e.target.value });\r\n            }}\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={account.password}\r\n            onChange={(e) => {\r\n              setAccount({ ...account, password: e.target.value });\r\n            }}\r\n          />\r\n\r\n          {loginReducer.error && (\r\n            <Alert severity=\"error\">{loginReducer.result}</Alert>\r\n          )}\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Button\r\n            onClick={() => props.history.push(\"/register\")}\r\n            fullWidth\r\n            size=\"small\"\r\n            color=\"primary\"\r\n          >\r\n            Register\r\n          </Button>\r\n          {/* #spy {JSON.stringify(account)} */}\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\Project\\front-end\\src\\components\\pages\\User.js",["279","280","281","282","283"],"import { React, useEffect, useState } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\n//Route\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//  Material Ui\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\n// Redux-Hook\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as userAction from \"./../../actions/user.action\";\r\n\r\n// Constatns\r\nimport { imageUrl } from \"./../../Constatns\";\r\n\r\nfunction User(props) {\r\n  // Call Redux Action\r\n  const dispatch = useDispatch();\r\n  const userReducer = useSelector(({ userReducer }) => userReducer);\r\n\r\n  // useState\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n  const handleClickOpen = (item) => {\r\n    setSelectedItem(item);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const showDeletionConfirmDlg = () => {\r\n    return selectedItem ? (\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          Are you sure to delete this item Id : {selectedItem.id}?\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <span style={{ marginLeft: 20 }}>{selectedItem.name}</span>\r\n            </div>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(userAction.deleteUser(selectedItem.id));\r\n              handleClose();\r\n            }}\r\n            color=\"secondary\"\r\n            autoFocus\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    ) : null;\r\n  };\r\n\r\n  // Config Material Theme\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: \"700\",\r\n      marginTop: 0,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    dispatch(userAction.getUser());\r\n  }, []);\r\n\r\n  // Loop Fetch DataTable\r\n  const columns = [\r\n    {\r\n      title: \"Id\",\r\n      //   cellStyle: { minWidth: 10 },\r\n      render: (item) => <Typography variant=\"body1\">{item.id}</Typography>,\r\n    },\r\n\r\n    {\r\n      title: \"Username\",\r\n      cellStyle: { minWidth: 100 },\r\n      render: (item) => (\r\n        <Typography variant=\"body1\">{item.username}</Typography>\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"Create\",\r\n      render: (item) => (\r\n        <Typography>\r\n          <Moment format=\"DD/MM/YYYY\">{item.createAt}</Moment>\r\n        </Typography>\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"Update\",\r\n      render: (item) => (\r\n        <Typography>\r\n          <Moment format=\"DD/MM/YYYY\">{item.updateAt}</Moment>\r\n        </Typography>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      icon: () => <Edit />,\r\n      iconProps: { color: \"primary\" },\r\n      tooltip: \"Edit\",\r\n      onClick: (event, rowData) => {\r\n        props.history.push(\"/userEdit/\" + rowData.id);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <DeleteOutline />,\r\n      iconProps: { color: \"action\" },\r\n      tooltip: \"Delete\",\r\n      onClick: (event, rowData) => {\r\n        handleClickOpen(rowData);\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MaterialTable\r\n        columns={columns}\r\n        data={userReducer.result ? userReducer.result : []}\r\n        title=\"User\"\r\n        actions={actions}\r\n        options={{\r\n          pageSize: 8,\r\n          search: true,\r\n          rowStyle: (rowData, index) => ({\r\n            backgroundColor: index % 2 == 0 ? \"#f8faf9\" : \"#fff\",\r\n          }),\r\n        }}\r\n        // Button to Route StockCreate Page\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <MTableToolbar {...props} />\r\n              <div style={{ padding: \"0px 10px\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  component={Link}\r\n                  to=\"/userCreate\"\r\n                >\r\n                  Create\r\n                </Button>\r\n                {/* <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  component={Link}\r\n                  to=\"/stockCreate\"\r\n                >\r\n                  Delete\r\n                </Button> */}\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      {showDeletionConfirmDlg()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","D:\\Project\\front-end\\src\\components\\pages\\AboutUs.js",[],"D:\\Project\\front-end\\src\\components\\pages\\UserEdit.js",["284","285","286"],"import { React, useEffect, useState } from \"react\";\r\n\r\n// Route\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Formik\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\n\r\n// Material UI\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// Redux-Hook\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as userAction from \"./../../actions/user.action\";\r\n\r\n// Import Constants\r\nimport { imageUrl } from \"./../../Constatns\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"80%\",\r\n  },\r\n  field: {\r\n    marginTop: 16,\r\n  },\r\n  card: {\r\n    padding: 20,\r\n  },\r\n}));\r\n\r\nexport default function UserEdit(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const userReducer = useSelector(({ userReducer }) => userReducer);\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let id = props.match.params.id;\r\n    dispatch(userAction.getUserById(id));\r\n  }, [dispatch, props.match.params.id]);\r\n\r\n  const showForm = ({ values, setFieldValue, isValid, dirty }) => {\r\n    return (\r\n      <Form>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h3\">\r\n              Edit User {props.match.params.id}\r\n            </Typography>\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"username\"\r\n              type=\"text\"\r\n              label=\"Username\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            <br />\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n            />\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"email\"\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n            />\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"level\"\r\n              type=\"text\"\r\n              label=\"Level\"\r\n              variant=\"outlined\"\r\n            />\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              disabled={!(isValid && dirty)}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button component={Link} to=\"/user\" color=\"default\" rasied=\"true\">\r\n              Cancel\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {/* Main content */}\r\n\r\n      <div className=\"box-body\" style={{ marginTop: 30 }}>\r\n        <Formik\r\n          validate={(values) => {\r\n            let errors = {};\r\n            if (!values.username) errors.name = \"Enter Username\";\r\n            if (!values.password) errors.stock = \"Enter Password\";\r\n            if (!values.level) errors.level = \"Enter Level\";\r\n            return errors;\r\n          }}\r\n          enableReinitialize\r\n          initialValues={\r\n            userReducer.result\r\n              ? userReducer.result\r\n              : { username: \" \", password: \" \", level: \" \" }\r\n          }\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            // let formData = new FormData();\r\n            // formData.append(\"id\", values.id);\r\n            // formData.append(\"username\", values.username);\r\n            // formData.append(\"password\", values.password);\r\n            // formData.append(\"level\", values.level);\r\n            // formData.append(\"stock\", values.stock);\r\n            // if (values.file) {\r\n            //   formData.append(\"image\", values.file);\r\n            // }\r\n\r\n            dispatch(userAction.updateUser(values, props.history));\r\n\r\n            setSubmitting(false);\r\n          }}\r\n        >\r\n          {(props) => showForm(props)}\r\n        </Formik>\r\n      </div>\r\n      {/* /.content */}\r\n    </Container>\r\n  );\r\n}\r\n","D:\\Project\\front-end\\src\\components\\pages\\Borrow.js",["287","288","289","290","291","292","293"],"import { React, useEffect, useState } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\n//Route\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//  Material Ui\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\n// Redux-Hook\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as stockAction from \"./../../actions/stock.action\";\r\n\r\n// Constatns\r\nimport { imageUrl } from \"./../../Constatns\";\r\n\r\nfunction Borrow(props) {\r\n  // Call Redux Action\r\n  const dispatch = useDispatch();\r\n  const stockReducer = useSelector(({ stockReducer }) => stockReducer);\r\n\r\n  // useState\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n  const handleClickOpen = (item) => {\r\n    setSelectedItem(item);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const showDeletionConfirmDlg = () => {\r\n    return selectedItem ? (\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          Are you sure to delete this item Id : {selectedItem.id}?\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <img\r\n                src={`${imageUrl}/images/${selectedItem.image}`}\r\n                style={{ width: 50, height: 50, borderRadius: \"5%\" }}\r\n              />\r\n              <span style={{ marginLeft: 20 }}>{selectedItem.name}</span>\r\n            </div>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(stockAction.deleteProduct(selectedItem.id));\r\n              handleClose();\r\n            }}\r\n            color=\"secondary\"\r\n            autoFocus\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    ) : null;\r\n  };\r\n\r\n  // Config Material Theme\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: \"700\",\r\n      marginTop: 0,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    dispatch(stockAction.getBorrows());\r\n  }, []);\r\n\r\n  // Loop Fetch DataTable\r\n  const columns = [\r\n    {\r\n      title: \"Image\",\r\n      cellStyle: { padding: 0 },\r\n      render: (item) => (\r\n        <img\r\n          src={`${imageUrl}/images/${item.image}?dummy=${Math.random()}`}\r\n          style={{ width: 70, height: 70, borderRadius: \"5%\" }}\r\n        />\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"Device Name\",\r\n      cellStyle: { minWidth: 300 },\r\n      render: (item) => (\r\n        <Typography variant=\"body1\">{item.device_name}</Typography>\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"IMEI\",\r\n      cellStyle: { minWidth: 50 },\r\n      render: (item) => <Typography variant=\"body1\">{item.imei}</Typography>,\r\n    },\r\n\r\n    {\r\n      title: \"Borrow Status\",\r\n      cellStyle: { minWidth: 50 },\r\n      render: (item) => (\r\n        <Typography variant=\"body1\">{item.borrow_status}</Typography>\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"Device Status\",\r\n      cellStyle: { minWidth: 50 },\r\n      render: (item) => (\r\n        <Typography variant=\"body1\">{item.device_status}</Typography>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Price\",\r\n    //   render: (item) => (\r\n    //     <Typography variant=\"body1\">\r\n    //       <NumberFormat\r\n    //         value={item.price}\r\n    //         displayType={\"text\"}\r\n    //         thousandSeparator={true}\r\n    //         decimalScale={2}\r\n    //         fixedDecimalScale={true}\r\n    //         prefix={\"฿\"}\r\n    //       />\r\n    //     </Typography>\r\n    //   ),\r\n    // },\r\n    // {\r\n    //   title: \"Stock\",\r\n    //   render: (item) => (\r\n    //     <Typography variant=\"body1\">\r\n    //       <NumberFormat\r\n    //         value={item.stock}\r\n    //         displayType={\"text\"}\r\n    //         thousandSeparator={true}\r\n    //         decimalScale={0}\r\n    //         fixedDecimalScale={true}\r\n    //         suffix={\" pcs\"}\r\n    //       />\r\n    //     </Typography>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: \"Updated\",\r\n      render: (item) => (\r\n        <Typography>\r\n          <Moment format=\"DD/MM/YYYY\">{item.updatedAt}</Moment>\r\n        </Typography>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      icon: () => <Edit />,\r\n      iconProps: { color: \"primary\" },\r\n      tooltip: \"Edit\",\r\n      onClick: (event, rowData) => {\r\n        props.history.push(\"/stockEdit/\" + rowData.id);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <DeleteOutline />,\r\n      iconProps: { color: \"action\" },\r\n      tooltip: \"Delete\",\r\n      onClick: (event, rowData) => {\r\n        handleClickOpen(rowData);\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MaterialTable\r\n        columns={columns}\r\n        data={stockReducer.result ? stockReducer.result : []}\r\n        title=\"Borrow\"\r\n        actions={actions}\r\n        options={{\r\n          pageSize: 5,\r\n          search: true,\r\n          rowStyle: (rowData, index) => ({\r\n            backgroundColor: index % 2 == 0 ? \"#f8faf9\" : \"#fff\",\r\n          }),\r\n        }}\r\n        // Button to Route StockCreate Page\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <MTableToolbar {...props} />\r\n              <div style={{ padding: \"0px 10px\" }}>\r\n                {/* <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  component={Link}\r\n                  to=\"/stockCreate\"\r\n                >\r\n                  Create\r\n                </Button> */}\r\n                {/* <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  component={Link}\r\n                  to=\"/stockCreate\"\r\n                >\r\n                  Delete\r\n                </Button> */}\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      {showDeletionConfirmDlg()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Borrow;\r\n","D:\\Project\\front-end\\src\\components\\pages\\UserCreate.js",[],"D:\\Project\\front-end\\src\\components\\pages\\StockEdit.js",["294","295","296","297"],"import { React, useEffect } from \"react\";\r\n\r\n// Route\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Formik\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\n\r\n// Material UI\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// Redux-Hook\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as stockAction from \"./../../actions/stock.action\";\r\n\r\n// Import Constants\r\nimport { imageUrl } from \"./../../Constatns\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"80%\",\r\n  },\r\n  field: {\r\n    marginTop: 16,\r\n  },\r\n  card: {\r\n    padding: 20,\r\n  },\r\n}));\r\n\r\nexport default function StockEdit(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const stockReducer = useSelector(({ stockReducer }) => stockReducer);\r\n\r\n  useEffect(() => {\r\n    let id = props.match.params.id;\r\n    dispatch(stockAction.getProductById(id));\r\n  }, []);\r\n\r\n  const showPreviewImage = (values) => {\r\n    if (values.file_obj) {\r\n      return <img src={values.file_obj} style={{ height: 100 }} />;\r\n    } else if (values.image) {\r\n      return (\r\n        <img\r\n          src={`${imageUrl}/images/${values.image}`}\r\n          style={{ height: 100 }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const showForm = ({ values, setFieldValue, isValid, dirty }) => {\r\n    return (\r\n      <Form>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h3\">\r\n              Edit Stock {props.match.params.id}\r\n            </Typography>\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"device_name\"\r\n              type=\"text\"\r\n              label=\"Device Name\"\r\n            />\r\n            <br />\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"imei\"\r\n              type=\"text\"\r\n              label=\"imei\"\r\n            />\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"borrow_status\"\r\n              type=\"text\"\r\n              label=\"Borrow Status\"\r\n            />\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"device_status\"\r\n              type=\"text\"\r\n              label=\"Device Status\"\r\n            />\r\n\r\n            <div style={{ marginTop: 20 }}>{showPreviewImage(values)}</div>\r\n\r\n            <div className={classes.field}>\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/images/ic_photo.png`}\r\n                style={{ width: 25, height: 20 }}\r\n              />\r\n              <span\r\n                style={{ color: \"#00B0CD\", marginLeft: 10, marginRight: 30 }}\r\n              >\r\n                Add Picture\r\n              </span>\r\n              <br />\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  e.preventDefault();\r\n                  setFieldValue(\"file\", e.target.files[0]); // for upload\r\n                  setFieldValue(\r\n                    \"file_obj\",\r\n                    URL.createObjectURL(e.target.files[0])\r\n                  ); // for preview image\r\n                }}\r\n                name=\"image\"\r\n                click-type=\"type1\"\r\n                className=\"picupload\"\r\n                multiple\r\n                accept=\"image/*\"\r\n                id=\"files\"\r\n                style={{ padding: \"20px 0\" }}\r\n              />\r\n            </div>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              disabled={!(isValid && dirty)}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button component={Link} to=\"/stock\" color=\"default\" rasied=\"true\">\r\n              Cancel\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {/* Main content */}\r\n\r\n      <div className=\"box-body\" style={{ marginTop: 30 }}>\r\n        <Formik\r\n          validate={(values) => {\r\n            let errors = {};\r\n            if (!values.device_name) errors.device_name = \"Enter Device name\";\r\n            if (!values.imei) errors.imei = \"Enter IMEI\";\r\n            if (!values.borrow_status)\r\n              errors.borrow_status = \"Enter Borrow Status\";\r\n            if (!values.device_status)\r\n              errors.device_status = \"Enter Device Status\";\r\n            return errors;\r\n          }}\r\n          enableReinitialize\r\n          initialValues={\r\n            stockReducer.result\r\n              ? stockReducer.result\r\n              : {\r\n                  device_name: \" \",\r\n                  imei: \" \",\r\n                  borrow_status: \" \",\r\n                  device_status: \" \",\r\n                }\r\n          }\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            let formData = new FormData();\r\n            formData.append(\"id\", values.id);\r\n            formData.append(\"device_name\", values.device_name);\r\n            formData.append(\"imei\", values.imei);\r\n            formData.append(\"borrow_status\", values.borrow_status);\r\n            formData.append(\"device_status\", values.device_status);\r\n            if (values.file) {\r\n              formData.append(\"image\", values.file);\r\n            }\r\n            dispatch(stockAction.updateProduct(formData, props.history));\r\n\r\n            setSubmitting(false);\r\n          }}\r\n        >\r\n          {(props) => showForm(props)}\r\n        </Formik>\r\n      </div>\r\n      {/* /.content */}\r\n    </Container>\r\n  );\r\n}\r\n","D:\\Project\\front-end\\src\\reducers\\register.reducer.js",[],"D:\\Project\\front-end\\src\\reducers\\stock.reducer.js",["298"],"import { STOCK_SUCCESS, STOCK_FETCHING, STOCK_FAILED } from \"./../Constatns.js\";\r\n\r\nconst initialState = {\r\n  result: null,\r\n  isFetching: false,\r\n  isError: false,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case STOCK_SUCCESS:\r\n      return { ...state, result: payload, isFetching: false, isError: false };\r\n\r\n    case STOCK_FAILED:\r\n      return { ...state, result: null, isFetching: false, isError: true };\r\n\r\n    case STOCK_FETCHING:\r\n      return { ...state, result: null, isFetching: true, isError: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\Project\\front-end\\src\\reducers\\login.reducer.js",["299"],"import {\r\n  LOGIN_FAILED,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FETCHING,\r\n  LOGOUT,\r\n} from \"./../Constatns\";\r\n\r\nconst initialState = {\r\n  result: null,\r\n  isFetching: false,\r\n  error: false,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case LOGIN_FETCHING:\r\n      return { ...state, isFetching: true, error: false, result: null };\r\n    case LOGIN_SUCCESS:\r\n      return { ...state, isFetching: false, error: false, result: payload };\r\n    case LOGIN_FAILED:\r\n      return { ...state, isFetching: false, error: true, result: payload };\r\n    case LOGOUT:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\Project\\front-end\\src\\reducers\\transaction.reducer.js",[],"D:\\Project\\front-end\\src\\reducers\\shop.reducer.js",[],"D:\\Project\\front-end\\src\\reducers\\user.reducer.js",["300"],"import {\r\n  USER_SUCCESS,\r\n  USER_FETCHING,\r\n  USER_FAILED,\r\n  USER_UPDATED,\r\n} from \"./../Constatns.js\";\r\n\r\nconst initialState = {\r\n  result: null,\r\n  isFetching: false,\r\n  isError: false,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case USER_SUCCESS:\r\n      return { ...state, result: payload, isFetching: false, isError: false };\r\n\r\n    case USER_UPDATED:\r\n      return { ...state, result: payload, isFetching: false, isError: false };\r\n\r\n    case USER_FAILED:\r\n      return { ...state, result: null, isFetching: false, isError: true };\r\n\r\n    case USER_FETCHING:\r\n      return { ...state, result: null, isFetching: true, isError: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\Project\\front-end\\src\\utils\\HttpClient.js",["301"],"import axios from \"axios\";\r\nimport join from \"url-join\";\r\nimport {\r\n  server,\r\n  apiUrl,\r\n  NOT_CONNECT_NETWORK,\r\n  NETWORK_CONNECTION_MESSAGE,\r\n} from \"./../Constatns.js\";\r\n\r\nconst isAbsoluteURLRegex = /^(?:\\w+:)\\/\\//;\r\n\r\naxios.interceptors.request.use(async (config) => {\r\n  if (!isAbsoluteURLRegex.test(config.url)) {\r\n    config.url = join(apiUrl, config.url);\r\n  }\r\n  config.timeout = 10000; // 10 Second\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    debugger;\r\n    console.log(JSON.stringify(error, undefined, 2));\r\n    if (axios.isCancel(error)) {\r\n      return Promise.reject(error);\r\n    } else if (!error.response) {\r\n      return Promise.reject({\r\n        code: NOT_CONNECT_NETWORK,\r\n        message: NETWORK_CONNECTION_MESSAGE,\r\n      });\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const httpClient = axios;\r\n","D:\\Project\\front-end\\src\\actions\\stock.action.js",[],"D:\\Project\\front-end\\src\\actions\\user.action.js",[],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\index.js",["302"],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\App.js",["303","304","305","306","307"],"import { React, useEffect, useState } from \"react\";\r\n\r\n// Material UI\r\nimport { Button, Container } from \"@material-ui/core\";\r\nimport {\r\n  makeStyles,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\n\r\n// Route\r\nimport Header from \"./components/fragments/Header\";\r\nimport Menu from \"./components/fragments/Menu\";\r\nimport Login from \"./components/pages/Login\";\r\nimport Register from \"./components/pages/Register\";\r\nimport Stock from \"./components/pages/Stock\";\r\nimport StockCreate from \"./components/pages/StockCreate\";\r\nimport StockEdit from \"./components/pages/StockEdit\";\r\nimport Report from \"./components/pages/Report\";\r\nimport AboutUs from \"./components/pages/AboutUs\";\r\nimport User from \"./components/pages/User\";\r\nimport UserCreate from \"./components/pages/UserCreate\";\r\nimport UserEdit from \"./components/pages/UserEdit\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\n// Redux-Hook\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as loginAction from \"./../src/actions/login.action\";\r\n\r\nimport clsx from \"clsx\";\r\nimport Borrow from \"./components/pages/Borrow\";\r\nimport { LOGIN_STATUS } from \"./Constatns\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\n// Protected Route\r\nconst SecuredRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      // ternary condition\r\n      loginAction.isLoggedIn() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst LoginRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      // ternary condition\r\n      loginAction.isLoggedIn() ? <Redirect to=\"/stock\" /> : <Login {...props} />\r\n    }\r\n  />\r\n);\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const loginReducer = useSelector(({ loginReducer }) => loginReducer);\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpenDrawer(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpenDrawer(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(loginAction.reLogin());\r\n  }, []);\r\n\r\n  return (\r\n    <Router basename=\"/src/components/pages/Login.js\">\r\n      {loginReducer.result &&\r\n        !loginReducer.error &&\r\n        localStorage.getItem(LOGIN_STATUS) && (\r\n          <Header handleDrawerOpen={handleDrawerOpen} open={openDrawer} />\r\n        )}\r\n\r\n      {loginReducer.result &&\r\n        !loginReducer.error &&\r\n        localStorage.getItem(LOGIN_STATUS) && (\r\n          <Menu\r\n            handleDrawerOpen={openDrawer}\r\n            handleDrawerClose={handleDrawerClose}\r\n          />\r\n        )}\r\n\r\n      <div className={classes.drawerHeader} />\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]:\r\n            openDrawer && loginReducer.result && !loginReducer.error,\r\n        })}\r\n      >\r\n        <Container style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Switch>\r\n            <LoginRoute path=\"/login\" component={Login} />\r\n            <Route path=\"/register\" component={Register} />\r\n            <SecuredRoute path=\"/stock\" component={Stock} />\r\n            <SecuredRoute path=\"/report\" component={Report} />\r\n            <SecuredRoute path=\"/about\" component={AboutUs} />\r\n            <SecuredRoute path=\"/stockCreate\" component={StockCreate} />\r\n            <SecuredRoute path=\"/stockEdit/:id\" component={StockEdit} />\r\n            <SecuredRoute path=\"/user\" component={User} />\r\n            <SecuredRoute path=\"/userCreate\" component={UserCreate} />\r\n            <SecuredRoute path=\"/userEdit/:id\" component={UserEdit} />\r\n            <SecuredRoute path=\"/borrow\" component={Borrow} />\r\n            <Route\r\n              exact={true}\r\n              path=\"/\"\r\n              component={() => <Redirect to=\"/login\" />}\r\n            />\r\n          </Switch>\r\n        </Container>\r\n      </main>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\reducers\\index.js",[],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\Constatns.js",[],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\fragments\\Header.js",["308"],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\actions\\login.action.js",["309","310"],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\fragments\\Menu.js",["311","312","313","314","315","316","317","318","319","320","321"],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\Login.js",["322","323","324","325"],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\Register.js",["326","327","328","329","330","331","332","333"],"import { React, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Formik } from \"formik\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport {\r\n  CardActions,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport { apiUrl, server } from \"./../../Constatns\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport loginReducer from \"../../reducers/login.reducer\";\r\nimport * as loginAction from \"./../../actions/login.action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 200,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Register(props) {\r\n  const [isError, setIsError] = useState(false);\r\n  const [showDialog, setShowDialog] = useState(false);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const loginReducer = useSelector(({ loginReducer }) => loginReducer);\r\n  function showForm({\r\n    values,\r\n    handleChange,\r\n    handleSubmit,\r\n    setFieldValue,\r\n    isSubmitting,\r\n  }) {\r\n    return (\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          value={values.username}\r\n          onChange={handleChange}\r\n          id=\"username\"\r\n          label=\"Username\"\r\n          autoComplete=\"username\"\r\n          autoFocus\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          value={values.password}\r\n          onChange={handleChange}\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"current-password\"\r\n        />\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          value={values.email}\r\n          onChange={handleChange}\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          id=\"email\"\r\n          autoComplete=\"current-email\"\r\n        />\r\n\r\n        {isError && (\r\n          <Alert severity=\"error\">Error , your registration is Failed</Alert>\r\n        )}\r\n\r\n        {/* Register Button */}\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          disabled={isSubmitting}\r\n          // onClick={onClick}\r\n        >\r\n          Register\r\n        </Button>\r\n        <Button\r\n          onClick={() => props.history.goBack()}\r\n          fullWidth\r\n          size=\"small\"\r\n          color=\"primary\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={`${process.env.PUBLIC_URL}/images/authen_header.jpg`}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Register\r\n          </Typography>\r\n\r\n          <Formik\r\n            initialValues={{ username: \"\", password: \"\", email: \"\" }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              setSubmitting(true);\r\n              Axios.post(\r\n                \"http://191.101.38.12:8085/api/v2/authen/register\",\r\n                values\r\n              )\r\n                .then((result) => {\r\n                  setSubmitting(false);\r\n                  const { data } = result;\r\n                  debugger;\r\n                  if (data.result == \"ok\") {\r\n                    dispatch(loginAction.setSuccess());\r\n                    setShowDialog(true);\r\n                  } else {\r\n                    // dispatch(\r\n                    //   loginAction.hasError(\r\n                    //     \"Error , your information is not correct\"\r\n                    //   )\r\n                    // );\r\n\r\n                    setIsError(true);\r\n                  }\r\n                })\r\n                .catch((error) => {\r\n                  setIsError(true);\r\n                });\r\n            }}\r\n          >\r\n            {(props) => showForm(props)}\r\n          </Formik>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Dialog\r\n        open={showDialog}\r\n        keepMounted\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          <CheckCircleIcon /> {\"SUCCESS\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Your Registration is successfull\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              props.history.push(\"/login\");\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\Stock.js",["334","335","336","337","338","339"],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\StockCreate.js",["340","341","342","343"],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\Report.js",[],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\StockEdit.js",["344","345","346","347"],"import { React, useEffect } from \"react\";\r\n\r\n// Route\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Formik\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\n\r\n// Material UI\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// Redux-Hook\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as stockAction from \"./../../actions/stock.action\";\r\n\r\n// Import Constants\r\nimport { imageUrl } from \"./../../Constatns\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"80%\",\r\n  },\r\n  field: {\r\n    marginTop: 16,\r\n  },\r\n  card: {\r\n    padding: 20,\r\n  },\r\n  dropdown: {\r\n    marginTop: 16,\r\n    width: \"10%\",\r\n    height: \"30%\",\r\n  },\r\n}));\r\n\r\nexport default function StockEdit(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const stockReducer = useSelector(({ stockReducer }) => stockReducer);\r\n\r\n  useEffect(() => {\r\n    let id = props.match.params.id;\r\n    dispatch(stockAction.getProductById(id));\r\n  }, []);\r\n\r\n  const showPreviewImage = (values) => {\r\n    if (values.file_obj) {\r\n      return <img src={values.file_obj} style={{ height: 100 }} />;\r\n    } else if (values.image) {\r\n      return (\r\n        <img\r\n          src={`${imageUrl}/images/${values.image}`}\r\n          style={{ height: 100 }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const showForm = ({ values, setFieldValue, isValid, dirty }) => {\r\n    return (\r\n      <Form>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h3\">\r\n              Edit Stock {props.match.params.id}\r\n            </Typography>\r\n\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"device_name\"\r\n              type=\"text\"\r\n              label=\"Device Name\"\r\n            />\r\n            <br />\r\n            <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"imei\"\r\n              type=\"text\"\r\n              label=\"imei\"\r\n            />\r\n\r\n            {/* <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"borrow_status\"\r\n              type=\"text\"\r\n              label=\"Borrow Status\"\r\n            /> */}\r\n\r\n            {/* <Field\r\n              className={classes.field}\r\n              fullWidth\r\n              component={TextField}\r\n              name=\"device_status\"\r\n              type=\"text\"\r\n              label=\"Device Status\"\r\n            /> */}\r\n\r\n            <br />\r\n\r\n            <Field\r\n              as=\"select\"\r\n              name=\"borrow_status\"\r\n              className={classes.dropdown}\r\n            >\r\n              <option value=\"wait\">Wait</option>\r\n              <option value=\"done\">Done</option>\r\n            </Field>\r\n\r\n            <br />\r\n\r\n            <Field\r\n              as=\"select\"\r\n              name=\"device_status\"\r\n              className={classes.dropdown}\r\n            >\r\n              <option value=\"good\">Good</option>\r\n              <option value=\"damage\">Damge</option>\r\n            </Field>\r\n\r\n            <div style={{ marginTop: 20 }}>{showPreviewImage(values)}</div>\r\n\r\n            <div className={classes.field}>\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/images/ic_photo.png`}\r\n                style={{ width: 25, height: 20 }}\r\n              />\r\n              <span\r\n                style={{ color: \"#00B0CD\", marginLeft: 10, marginRight: 30 }}\r\n              >\r\n                Add Picture\r\n              </span>\r\n              <br />\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  e.preventDefault();\r\n                  setFieldValue(\"file\", e.target.files[0]); // for upload\r\n                  setFieldValue(\r\n                    \"file_obj\",\r\n                    URL.createObjectURL(e.target.files[0])\r\n                  ); // for preview image\r\n                }}\r\n                name=\"image\"\r\n                click-type=\"type1\"\r\n                className=\"picupload\"\r\n                multiple\r\n                accept=\"image/*\"\r\n                id=\"files\"\r\n                style={{ padding: \"20px 0\" }}\r\n              />\r\n            </div>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              disabled={!(isValid && dirty)}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button component={Link} to=\"/stock\" color=\"default\" rasied=\"true\">\r\n              Cancel\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {/* Main content */}\r\n\r\n      <div className=\"box-body\" style={{ marginTop: 30 }}>\r\n        <Formik\r\n          validate={(values) => {\r\n            let errors = {};\r\n            if (!values.device_name) errors.device_name = \"Enter Device name\";\r\n            if (!values.imei) errors.imei = \"Enter IMEI\";\r\n            if (!values.borrow_status)\r\n              errors.borrow_status = \"Enter Borrow Status\";\r\n            if (!values.device_status)\r\n              errors.device_status = \"Enter Device Status\";\r\n            return errors;\r\n          }}\r\n          enableReinitialize\r\n          initialValues={\r\n            stockReducer.result\r\n              ? stockReducer.result\r\n              : {\r\n                  device_name: \" \",\r\n                  imei: \" \",\r\n                  borrow_status: \" \",\r\n                  device_status: \" \",\r\n                }\r\n          }\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            let formData = new FormData();\r\n            formData.append(\"id\", values.id);\r\n            formData.append(\"device_name\", values.device_name);\r\n            formData.append(\"imei\", values.imei);\r\n            formData.append(\"borrow_status\", values.borrow_status);\r\n            formData.append(\"device_status\", values.device_status);\r\n            if (values.file) {\r\n              formData.append(\"image\", values.file);\r\n            }\r\n            dispatch(stockAction.updateProduct(formData, props.history));\r\n\r\n            setSubmitting(false);\r\n          }}\r\n        >\r\n          {(props) => showForm(props)}\r\n        </Formik>\r\n      </div>\r\n      {/* /.content */}\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\User.js",["348","349","350","351","352"],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\AboutUs.js",[],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\Borrow.js",["353","354","355","356","357","358","359"],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\UserEdit.js",["360","361","362"],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\components\\pages\\UserCreate.js",[],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\reducers\\stock.reducer.js",["363"],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\reducers\\login.reducer.js",["364"],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\reducers\\shop.reducer.js",[],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\reducers\\register.reducer.js",[],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\reducers\\transaction.reducer.js",[],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\reducers\\user.reducer.js",["365"],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\actions\\user.action.js",[],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\actions\\stock.action.js",[],"C:\\Users\\Jinyong\\Desktop\\front-end\\src\\utils\\HttpClient.js",["366"],"import axios from \"axios\";\r\nimport join from \"url-join\";\r\nimport {\r\n  server,\r\n  apiUrl,\r\n  NOT_CONNECT_NETWORK,\r\n  NETWORK_CONNECTION_MESSAGE,\r\n} from \"./../Constatns.js\";\r\n\r\nconst isAbsoluteURLRegex = /^(?:\\w+:)\\/\\//;\r\n\r\naxios.interceptors.request.use(async (config) => {\r\n  if (!isAbsoluteURLRegex.test(config.url)) {\r\n    config.url = join(apiUrl, config.url);\r\n  }\r\n  config.timeout = 10000; // 10 Second\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // debugger;\r\n    console.log(JSON.stringify(error, undefined, 2));\r\n    if (axios.isCancel(error)) {\r\n      return Promise.reject(error);\r\n    } else if (!error.response) {\r\n      return Promise.reject({\r\n        code: NOT_CONNECT_NETWORK,\r\n        message: NETWORK_CONNECTION_MESSAGE,\r\n      });\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const httpClient = axios;\r\n",{"ruleId":"367","severity":1,"message":"368","line":12,"column":20,"nodeType":"369","messageId":"370","endLine":12,"endColumn":31},{"ruleId":"371","severity":1,"message":"372","line":4,"column":10,"nodeType":"369","messageId":"373","endLine":4,"endColumn":16},{"ruleId":"371","severity":1,"message":"374","line":7,"column":3,"nodeType":"369","messageId":"373","endLine":7,"endColumn":17},{"ruleId":"371","severity":1,"message":"375","line":8,"column":3,"nodeType":"369","messageId":"373","endLine":8,"endColumn":16},{"ruleId":"371","severity":1,"message":"376","line":29,"column":3,"nodeType":"369","messageId":"373","endLine":29,"endColumn":13},{"ruleId":"377","severity":1,"message":"378","line":119,"column":6,"nodeType":"379","endLine":119,"endColumn":8,"suggestions":"380"},{"ruleId":"381","severity":1,"message":"382","line":54,"column":12,"nodeType":"383","messageId":"384","endLine":54,"endColumn":38},{"ruleId":"385","severity":1,"message":"386","line":54,"column":24,"nodeType":"383","messageId":"387","endLine":54,"endColumn":26},{"ruleId":"388","severity":1,"message":"389","line":58,"column":9,"nodeType":"390","endLine":58,"endColumn":25},{"ruleId":"371","severity":1,"message":"391","line":4,"column":8,"nodeType":"369","messageId":"373","endLine":4,"endColumn":12},{"ruleId":"371","severity":1,"message":"392","line":7,"column":8,"nodeType":"369","messageId":"373","endLine":7,"endColumn":19},{"ruleId":"371","severity":1,"message":"393","line":8,"column":8,"nodeType":"369","messageId":"373","endLine":8,"endColumn":14},{"ruleId":"371","severity":1,"message":"394","line":9,"column":8,"nodeType":"369","messageId":"373","endLine":9,"endColumn":15},{"ruleId":"371","severity":1,"message":"395","line":11,"column":8,"nodeType":"369","messageId":"373","endLine":11,"endColumn":18},{"ruleId":"371","severity":1,"message":"396","line":14,"column":8,"nodeType":"369","messageId":"373","endLine":14,"endColumn":16},{"ruleId":"371","severity":1,"message":"397","line":20,"column":8,"nodeType":"369","messageId":"373","endLine":20,"endColumn":17},{"ruleId":"371","severity":1,"message":"398","line":21,"column":8,"nodeType":"369","messageId":"373","endLine":21,"endColumn":16},{"ruleId":"371","severity":1,"message":"399","line":30,"column":19,"nodeType":"369","messageId":"373","endLine":30,"endColumn":27},{"ruleId":"400","severity":1,"message":"401","line":66,"column":14,"nodeType":"383","messageId":"402","endLine":66,"endColumn":15},{"ruleId":"400","severity":1,"message":"401","line":66,"column":71,"nodeType":"383","messageId":"402","endLine":66,"endColumn":72},{"ruleId":"371","severity":1,"message":"403","line":11,"column":3,"nodeType":"369","messageId":"373","endLine":11,"endColumn":14},{"ruleId":"371","severity":1,"message":"404","line":18,"column":3,"nodeType":"369","messageId":"373","endLine":18,"endColumn":7},{"ruleId":"371","severity":1,"message":"405","line":19,"column":3,"nodeType":"369","messageId":"373","endLine":19,"endColumn":7},{"ruleId":"371","severity":1,"message":"406","line":22,"column":10,"nodeType":"369","messageId":"373","endLine":22,"endColumn":16},{"ruleId":"371","severity":1,"message":"407","line":22,"column":18,"nodeType":"369","messageId":"373","endLine":22,"endColumn":24},{"ruleId":"371","severity":1,"message":"408","line":24,"column":8,"nodeType":"369","messageId":"373","endLine":24,"endColumn":20},{"ruleId":"371","severity":1,"message":"409","line":45,"column":9,"nodeType":"369","messageId":"373","endLine":45,"endColumn":21},{"ruleId":"385","severity":1,"message":"386","line":144,"column":35,"nodeType":"383","messageId":"387","endLine":144,"endColumn":37},{"ruleId":"371","severity":1,"message":"410","line":3,"column":8,"nodeType":"369","messageId":"373","endLine":3,"endColumn":20},{"ruleId":"371","severity":1,"message":"405","line":11,"column":22,"nodeType":"369","messageId":"373","endLine":11,"endColumn":26},{"ruleId":"411","severity":1,"message":"412","line":66,"column":15,"nodeType":"413","endLine":69,"endColumn":17},{"ruleId":"377","severity":1,"message":"378","line":105,"column":6,"nodeType":"379","endLine":105,"endColumn":8,"suggestions":"414"},{"ruleId":"411","severity":1,"message":"412","line":113,"column":9,"nodeType":"413","endLine":116,"endColumn":11},{"ruleId":"385","severity":1,"message":"386","line":219,"column":40,"nodeType":"383","messageId":"387","endLine":219,"endColumn":42},{"ruleId":"411","severity":1,"message":"412","line":43,"column":9,"nodeType":"413","endLine":43,"endColumn":77},{"ruleId":"411","severity":1,"message":"412","line":98,"column":15,"nodeType":"413","endLine":101,"endColumn":17},{"ruleId":"371","severity":1,"message":"403","line":4,"column":3,"nodeType":"369","messageId":"373","endLine":4,"endColumn":14},{"ruleId":"371","severity":1,"message":"404","line":11,"column":3,"nodeType":"369","messageId":"373","endLine":11,"endColumn":7},{"ruleId":"371","severity":1,"message":"405","line":12,"column":3,"nodeType":"369","messageId":"373","endLine":12,"endColumn":7},{"ruleId":"371","severity":1,"message":"408","line":17,"column":8,"nodeType":"369","messageId":"373","endLine":17,"endColumn":20},{"ruleId":"371","severity":1,"message":"410","line":3,"column":8,"nodeType":"369","messageId":"373","endLine":3,"endColumn":20},{"ruleId":"371","severity":1,"message":"405","line":11,"column":22,"nodeType":"369","messageId":"373","endLine":11,"endColumn":26},{"ruleId":"371","severity":1,"message":"415","line":26,"column":10,"nodeType":"369","messageId":"373","endLine":26,"endColumn":18},{"ruleId":"377","severity":1,"message":"378","line":101,"column":6,"nodeType":"379","endLine":101,"endColumn":8,"suggestions":"416"},{"ruleId":"385","severity":1,"message":"386","line":168,"column":40,"nodeType":"383","messageId":"387","endLine":168,"endColumn":42},{"ruleId":"371","severity":1,"message":"415","line":24,"column":10,"nodeType":"369","messageId":"373","endLine":24,"endColumn":18},{"ruleId":"371","severity":1,"message":"417","line":42,"column":10,"nodeType":"369","messageId":"373","endLine":42,"endColumn":18},{"ruleId":"371","severity":1,"message":"418","line":42,"column":20,"nodeType":"369","messageId":"373","endLine":42,"endColumn":31},{"ruleId":"371","severity":1,"message":"410","line":3,"column":8,"nodeType":"369","messageId":"373","endLine":3,"endColumn":20},{"ruleId":"371","severity":1,"message":"404","line":6,"column":10,"nodeType":"369","messageId":"373","endLine":6,"endColumn":14},{"ruleId":"371","severity":1,"message":"405","line":11,"column":22,"nodeType":"369","messageId":"373","endLine":11,"endColumn":26},{"ruleId":"411","severity":1,"message":"412","line":66,"column":15,"nodeType":"413","endLine":69,"endColumn":17},{"ruleId":"377","severity":1,"message":"378","line":105,"column":6,"nodeType":"379","endLine":105,"endColumn":8,"suggestions":"419"},{"ruleId":"411","severity":1,"message":"412","line":113,"column":9,"nodeType":"413","endLine":116,"endColumn":11},{"ruleId":"385","severity":1,"message":"386","line":219,"column":40,"nodeType":"383","messageId":"387","endLine":219,"endColumn":42},{"ruleId":"377","severity":1,"message":"420","line":46,"column":6,"nodeType":"379","endLine":46,"endColumn":8,"suggestions":"421"},{"ruleId":"411","severity":1,"message":"412","line":50,"column":14,"nodeType":"413","endLine":50,"endColumn":67},{"ruleId":"411","severity":1,"message":"412","line":53,"column":9,"nodeType":"413","endLine":56,"endColumn":11},{"ruleId":"411","severity":1,"message":"412","line":109,"column":15,"nodeType":"413","endLine":112,"endColumn":17},{"ruleId":"422","severity":1,"message":"423","line":9,"column":1,"nodeType":"424","endLine":23,"endColumn":3},{"ruleId":"422","severity":1,"message":"423","line":14,"column":1,"nodeType":"424","endLine":27,"endColumn":3},{"ruleId":"422","severity":1,"message":"423","line":14,"column":1,"nodeType":"424","endLine":31,"endColumn":3},{"ruleId":"371","severity":1,"message":"407","line":4,"column":3,"nodeType":"369","messageId":"373","endLine":4,"endColumn":9},{"ruleId":"367","severity":1,"message":"368","line":12,"column":20,"nodeType":"369","messageId":"370","endLine":12,"endColumn":31},{"ruleId":"371","severity":1,"message":"372","line":4,"column":10,"nodeType":"369","messageId":"373","endLine":4,"endColumn":16},{"ruleId":"371","severity":1,"message":"374","line":7,"column":3,"nodeType":"369","messageId":"373","endLine":7,"endColumn":17},{"ruleId":"371","severity":1,"message":"375","line":8,"column":3,"nodeType":"369","messageId":"373","endLine":8,"endColumn":16},{"ruleId":"371","severity":1,"message":"376","line":29,"column":3,"nodeType":"369","messageId":"373","endLine":29,"endColumn":13},{"ruleId":"377","severity":1,"message":"378","line":119,"column":6,"nodeType":"379","endLine":119,"endColumn":8,"suggestions":"425"},{"ruleId":"388","severity":1,"message":"389","line":58,"column":9,"nodeType":"390","endLine":58,"endColumn":25},{"ruleId":"381","severity":1,"message":"382","line":54,"column":12,"nodeType":"383","messageId":"384","endLine":54,"endColumn":38},{"ruleId":"385","severity":1,"message":"386","line":54,"column":24,"nodeType":"383","messageId":"387","endLine":54,"endColumn":26},{"ruleId":"371","severity":1,"message":"391","line":4,"column":8,"nodeType":"369","messageId":"373","endLine":4,"endColumn":12},{"ruleId":"371","severity":1,"message":"392","line":7,"column":8,"nodeType":"369","messageId":"373","endLine":7,"endColumn":19},{"ruleId":"371","severity":1,"message":"393","line":8,"column":8,"nodeType":"369","messageId":"373","endLine":8,"endColumn":14},{"ruleId":"371","severity":1,"message":"394","line":9,"column":8,"nodeType":"369","messageId":"373","endLine":9,"endColumn":15},{"ruleId":"371","severity":1,"message":"395","line":11,"column":8,"nodeType":"369","messageId":"373","endLine":11,"endColumn":18},{"ruleId":"371","severity":1,"message":"396","line":14,"column":8,"nodeType":"369","messageId":"373","endLine":14,"endColumn":16},{"ruleId":"371","severity":1,"message":"397","line":20,"column":8,"nodeType":"369","messageId":"373","endLine":20,"endColumn":17},{"ruleId":"371","severity":1,"message":"398","line":21,"column":8,"nodeType":"369","messageId":"373","endLine":21,"endColumn":16},{"ruleId":"371","severity":1,"message":"399","line":30,"column":19,"nodeType":"369","messageId":"373","endLine":30,"endColumn":27},{"ruleId":"400","severity":1,"message":"401","line":66,"column":14,"nodeType":"383","messageId":"402","endLine":66,"endColumn":15},{"ruleId":"400","severity":1,"message":"401","line":66,"column":71,"nodeType":"383","messageId":"402","endLine":66,"endColumn":72},{"ruleId":"371","severity":1,"message":"403","line":4,"column":3,"nodeType":"369","messageId":"373","endLine":4,"endColumn":14},{"ruleId":"371","severity":1,"message":"404","line":11,"column":3,"nodeType":"369","messageId":"373","endLine":11,"endColumn":7},{"ruleId":"371","severity":1,"message":"405","line":12,"column":3,"nodeType":"369","messageId":"373","endLine":12,"endColumn":7},{"ruleId":"371","severity":1,"message":"408","line":17,"column":8,"nodeType":"369","messageId":"373","endLine":17,"endColumn":20},{"ruleId":"371","severity":1,"message":"403","line":11,"column":3,"nodeType":"369","messageId":"373","endLine":11,"endColumn":14},{"ruleId":"371","severity":1,"message":"404","line":18,"column":3,"nodeType":"369","messageId":"373","endLine":18,"endColumn":7},{"ruleId":"371","severity":1,"message":"405","line":19,"column":3,"nodeType":"369","messageId":"373","endLine":19,"endColumn":7},{"ruleId":"371","severity":1,"message":"406","line":22,"column":10,"nodeType":"369","messageId":"373","endLine":22,"endColumn":16},{"ruleId":"371","severity":1,"message":"407","line":22,"column":18,"nodeType":"369","messageId":"373","endLine":22,"endColumn":24},{"ruleId":"371","severity":1,"message":"408","line":24,"column":8,"nodeType":"369","messageId":"373","endLine":24,"endColumn":20},{"ruleId":"371","severity":1,"message":"409","line":45,"column":9,"nodeType":"369","messageId":"373","endLine":45,"endColumn":21},{"ruleId":"385","severity":1,"message":"386","line":147,"column":35,"nodeType":"383","messageId":"387","endLine":147,"endColumn":37},{"ruleId":"371","severity":1,"message":"410","line":3,"column":8,"nodeType":"369","messageId":"373","endLine":3,"endColumn":20},{"ruleId":"371","severity":1,"message":"405","line":11,"column":22,"nodeType":"369","messageId":"373","endLine":11,"endColumn":26},{"ruleId":"411","severity":1,"message":"412","line":66,"column":15,"nodeType":"413","endLine":69,"endColumn":17},{"ruleId":"377","severity":1,"message":"378","line":105,"column":6,"nodeType":"379","endLine":105,"endColumn":8,"suggestions":"426"},{"ruleId":"411","severity":1,"message":"412","line":113,"column":9,"nodeType":"413","endLine":116,"endColumn":11},{"ruleId":"385","severity":1,"message":"386","line":219,"column":40,"nodeType":"383","messageId":"387","endLine":219,"endColumn":42},{"ruleId":"371","severity":1,"message":"427","line":44,"column":11,"nodeType":"369","messageId":"373","endLine":44,"endColumn":23},{"ruleId":"371","severity":1,"message":"428","line":44,"column":25,"nodeType":"369","messageId":"373","endLine":44,"endColumn":35},{"ruleId":"411","severity":1,"message":"412","line":49,"column":9,"nodeType":"413","endLine":49,"endColumn":77},{"ruleId":"411","severity":1,"message":"412","line":126,"column":15,"nodeType":"413","endLine":129,"endColumn":17},{"ruleId":"377","severity":1,"message":"420","line":51,"column":6,"nodeType":"379","endLine":51,"endColumn":8,"suggestions":"429"},{"ruleId":"411","severity":1,"message":"412","line":55,"column":14,"nodeType":"413","endLine":55,"endColumn":67},{"ruleId":"411","severity":1,"message":"412","line":58,"column":9,"nodeType":"413","endLine":61,"endColumn":11},{"ruleId":"411","severity":1,"message":"412","line":136,"column":15,"nodeType":"413","endLine":139,"endColumn":17},{"ruleId":"371","severity":1,"message":"410","line":3,"column":8,"nodeType":"369","messageId":"373","endLine":3,"endColumn":20},{"ruleId":"371","severity":1,"message":"405","line":11,"column":22,"nodeType":"369","messageId":"373","endLine":11,"endColumn":26},{"ruleId":"371","severity":1,"message":"415","line":26,"column":10,"nodeType":"369","messageId":"373","endLine":26,"endColumn":18},{"ruleId":"377","severity":1,"message":"378","line":101,"column":6,"nodeType":"379","endLine":101,"endColumn":8,"suggestions":"430"},{"ruleId":"385","severity":1,"message":"386","line":168,"column":40,"nodeType":"383","messageId":"387","endLine":168,"endColumn":42},{"ruleId":"371","severity":1,"message":"410","line":3,"column":8,"nodeType":"369","messageId":"373","endLine":3,"endColumn":20},{"ruleId":"371","severity":1,"message":"404","line":6,"column":10,"nodeType":"369","messageId":"373","endLine":6,"endColumn":14},{"ruleId":"371","severity":1,"message":"405","line":11,"column":22,"nodeType":"369","messageId":"373","endLine":11,"endColumn":26},{"ruleId":"411","severity":1,"message":"412","line":66,"column":15,"nodeType":"413","endLine":69,"endColumn":17},{"ruleId":"377","severity":1,"message":"378","line":105,"column":6,"nodeType":"379","endLine":105,"endColumn":8,"suggestions":"431"},{"ruleId":"411","severity":1,"message":"412","line":113,"column":9,"nodeType":"413","endLine":116,"endColumn":11},{"ruleId":"385","severity":1,"message":"386","line":219,"column":40,"nodeType":"383","messageId":"387","endLine":219,"endColumn":42},{"ruleId":"371","severity":1,"message":"415","line":24,"column":10,"nodeType":"369","messageId":"373","endLine":24,"endColumn":18},{"ruleId":"371","severity":1,"message":"417","line":42,"column":10,"nodeType":"369","messageId":"373","endLine":42,"endColumn":18},{"ruleId":"371","severity":1,"message":"418","line":42,"column":20,"nodeType":"369","messageId":"373","endLine":42,"endColumn":31},{"ruleId":"422","severity":1,"message":"423","line":9,"column":1,"nodeType":"424","endLine":23,"endColumn":3},{"ruleId":"422","severity":1,"message":"423","line":14,"column":1,"nodeType":"424","endLine":27,"endColumn":3},{"ruleId":"422","severity":1,"message":"423","line":14,"column":1,"nodeType":"424","endLine":31,"endColumn":3},{"ruleId":"371","severity":1,"message":"407","line":4,"column":3,"nodeType":"369","messageId":"373","endLine":4,"endColumn":9},"no-use-before-define","'middlewares' was used before it was defined.","Identifier","usedBeforeDefined","no-unused-vars","'Button' is defined but never used.","unusedVar","'createMuiTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["432"],"no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","eqeqeq","Expected '===' and instead saw '=='.","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'clsx' is defined but never used.","'CssBaseline' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'MenuIcon' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'Navllink' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'CardActions' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'apiUrl' is defined but never used.","'server' is defined but never used.","'loginReducer' is defined but never used.","'loginReducer' is assigned a value but never used.","'NumberFormat' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["433"],"'imageUrl' is defined but never used.",["434"],"'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.",["435"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["436"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["437"],["438"],"'handleChange' is assigned a value but never used.","'handleBlur' is assigned a value but never used.",["439"],["440"],["441"],{"desc":"442","fix":"443"},{"desc":"442","fix":"444"},{"desc":"442","fix":"445"},{"desc":"442","fix":"446"},{"desc":"447","fix":"448"},{"desc":"442","fix":"449"},{"desc":"442","fix":"450"},{"desc":"447","fix":"451"},{"desc":"442","fix":"452"},{"desc":"442","fix":"453"},"Update the dependencies array to be: [dispatch]",{"range":"454","text":"455"},{"range":"456","text":"455"},{"range":"457","text":"455"},{"range":"458","text":"455"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"459","text":"460"},{"range":"461","text":"455"},{"range":"462","text":"455"},{"range":"463","text":"460"},{"range":"464","text":"455"},{"range":"465","text":"455"},[3189,3191],"[dispatch]",[3186,3188],[2998,3000],[3188,3190],[1263,1265],"[dispatch, props.match.params.id]",[3189,3191],[3186,3188],[1343,1345],[2998,3000],[3188,3190]]